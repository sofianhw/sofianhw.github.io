<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Mqtt | Sofian Hadiwijaya]]></title>
  <link href="http://blog.sofianhw.com/blog/categories/mqtt/atom.xml" rel="self"/>
  <link href="http://blog.sofianhw.com/"/>
  <updated>2015-09-06T23:43:09+07:00</updated>
  <id>http://blog.sofianhw.com/</id>
  <author>
    <name><![CDATA[Sofian Hadiwijaya]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Menghubungkan Intel Edison Ke Geeknesia via MQTT Python-Paho]]></title>
    <link href="http://blog.sofianhw.com/blog/2015/07/03/menghubungkan-intel-edison-ke-geeknesia-via-mqtt-python-paho/"/>
    <updated>2015-07-03T16:58:55+07:00</updated>
    <id>http://blog.sofianhw.com/blog/2015/07/03/menghubungkan-intel-edison-ke-geeknesia-via-mqtt-python-paho</id>
    <content type="html"><![CDATA[<p>Hello Good People,</p>

<p>Pada postingan sebelumnya kita sudah membahas cara menghubungkan <a href="http://blog.sofianhw.com/blog/2015/06/13/iot-pada-intel-galileo-menggunakan-platform-dari-geeknesia-dot-com/">Intel Galileo ke Geeknesia dengan menggunakan nodejs</a>. Kemudian minggu lalu saya juga menulis tentang <a href="http://blog.sofianhw.com/blog/2015/06/29/pengenalan-bahasa-pemrogramman-python/">dasar-dasar Python</a>. Nah gimana menurut kalian bahasa Python sendiri?.</p>

<!-- more -->


<p>Sekarang kita akan mempelajari bagaimana menghubungkan Intel Edison <em>board</em> penerus dari Intel Galileo, bentuknya lebih kecil dan sudah dilengkapi dengan wifi dan bluetooth.</p>

<p>Sebelum kita menghubungkan Intel Edison ke geeknesia, kita akan mempelajari terlebih dahulu bagaimana cara mengkontrol GPIO dari Arduino <em>breakout</em> yang dibuat khusus untuk Intel Edison. Untuk mengkontrol GPIO pada Intel <em>Board</em> telah tersedia <em>module opensource</em> yaitu <a href="https://pypi.python.org/pypi/Wiring-x86/1.0.0">Wiring-x86</a>.</p>

<pre><code class="sh Terminal">$ pip install wiring-x86
</code></pre>

<p>Mari kita tes untuk membuat blinky LED.</p>

<pre><code class="Python blink.py"># Import the time module enable sleeps between turning the led on and off.
import time

# Import the GPIOEdison class from the wiringx86 module.
# In case you want to use a different board, simply the import right class
# below. The API is unified for all supported boards.
from wiringx86 import GPIOEdison as GPIO

# Create a new instance of the GPIOEdison class.
# Setting debug=True gives information about the interaction with sysfs.
gpio = GPIO(debug=False)
pin = 7
state = gpio.HIGH

# Set pin 7 to be used as an output GPIO pin.
print 'Setting up pin %d' % pin
gpio.pinMode(pin, gpio.OUTPUT)


print 'Blinking pin %d now...' % pin
try:
    while(True):
        # Write a state to the pin. ON or OFF.
        gpio.digitalWrite(pin, state)

        # Toggle the state.
        state = gpio.LOW if state == gpio.HIGH else gpio.HIGH

        # Sleep for a while.
        time.sleep(0.5)

# When you get tired of seeing the led blinking kill the loop with Ctrl-C.
except KeyboardInterrupt:
    # Leave the led turned off.
    print '\nCleaning up...'
    gpio.digitalWrite(pin, gpio.LOW)

    # Do a general cleanup. Calling this function is not mandatory.
    gpio.cleanup()
</code></pre>

<p>simpan dengan nama file blink.py , mari kita execute filenya.</p>

<pre><code class="sh Terminal">$ python blink.py
</code></pre>

<p><video width='320' height='640' preload='metadata' controls poster='/images/blinking-led-edison.jpg'><source src='/images/blinking-led-edison.mp4' type='video/mp4; codecs="avc1.42E01E, mp4a.40.2"'></video></p>

<p>Hore!!! LED-nya kedap-kedip.</p>

<p>Setelah kita bisa mengkontrol GPIO dari Intel Edison sekarang saatnya kita menginstall <em>package</em> untuk MQTT Client. Salah satu <em>module</em> yang hits sekarang yaitu <a href="https://pypi.python.org/pypi/paho-mqtt">Paho-MQTT</a>.</p>

<pre><code class="sh Terminal">$ pip install paho-mqtt
</code></pre>

<p>Selanjutnya, berikut kode dasar menggunakan paho-mqtt untuk berkomunikasi dengan <a href="http://geeknesia.com">Geeknesia</a> :
<figure class='code'><figcaption><span>mqttClient.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
</pre></td><td class='code'><pre><code class='Python'><span class='line'><span class="kn">from</span> <span class="nn">wiringx86</span> <span class="kn">import</span> <span class="n">GPIOEdison</span> <span class="k">as</span> <span class="n">GPIO</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">paho.mqtt.client</span> <span class="kn">as</span> <span class="nn">paho</span><span class="o">,</span> <span class="nn">os</span><span class="o">,</span> <span class="nn">urlparse</span><span class="o">,</span> <span class="nn">time</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">gpio</span> <span class="o">=</span> <span class="n">GPIO</span><span class="p">(</span><span class="n">debug</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</span><span class='line'><span class="n">analogpin</span> <span class="o">=</span> <span class="mi">17</span>
</span><span class='line'><span class="n">gpio</span><span class="o">.</span><span class="n">pinMode</span><span class="p">(</span><span class="n">analogpin</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">ANALOG_INPUT</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Define</span> <span class="n">event</span> <span class="n">callbacks</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">on_connect</span><span class="p">(</span><span class="n">mosq</span><span class="p">,</span> <span class="n">obj</span><span class="p">,</span> <span class="n">rc</span><span class="p">):</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">rc</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">rc</span><span class="p">))</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">on_message</span><span class="p">(</span><span class="n">mosq</span><span class="p">,</span> <span class="n">obj</span><span class="p">,</span> <span class="n">msg</span><span class="p">):</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">msg</span><span class="o">.</span><span class="n">topic</span> <span class="o">+</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span> <span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">msg</span><span class="o">.</span><span class="n">qos</span><span class="p">)</span> <span class="o">+</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span> <span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">msg</span><span class="o">.</span><span class="n">payload</span><span class="p">))</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">on_publish</span><span class="p">(</span><span class="n">mosq</span><span class="p">,</span> <span class="n">obj</span><span class="p">,</span> <span class="n">mid</span><span class="p">):</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">mid</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">mid</span><span class="p">))</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">on_subscribe</span><span class="p">(</span><span class="n">mosq</span><span class="p">,</span> <span class="n">obj</span><span class="p">,</span> <span class="n">mid</span><span class="p">,</span> <span class="n">granted_qos</span><span class="p">):</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Subscribed</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">mid</span><span class="p">)</span> <span class="o">+</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span> <span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">granted_qos</span><span class="p">))</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">on_log</span><span class="p">(</span><span class="n">mosq</span><span class="p">,</span> <span class="n">obj</span><span class="p">,</span> <span class="n">level</span><span class="p">,</span> <span class="n">string</span><span class="p">):</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">string</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">mqttc</span> <span class="o">=</span> <span class="n">paho</span><span class="o">.</span><span class="n">Client</span><span class="p">()</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Assign</span> <span class="n">event</span> <span class="n">callbacks</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">mqttc</span><span class="o">.</span><span class="n">on_message</span> <span class="o">=</span> <span class="n">on_message</span>
</span><span class='line'><span class="n">mqttc</span><span class="o">.</span><span class="n">on_connect</span> <span class="o">=</span> <span class="n">on_connect</span>
</span><span class='line'><span class="n">mqttc</span><span class="o">.</span><span class="n">on_publish</span> <span class="o">=</span> <span class="n">on_publish</span>
</span><span class='line'><span class="n">mqttc</span><span class="o">.</span><span class="n">on_subscribe</span> <span class="o">=</span> <span class="n">on_subscribe</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Uncomment</span> <span class="n">to</span> <span class="n">enable</span> <span class="n">debug</span> <span class="n">messages</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">mqttc</span><span class="o">.</span><span class="n">on_log</span> <span class="o">=</span> <span class="n">on_log</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Parse</span> <span class="n">CLOUDMQTT_URL</span> <span class="p">(</span><span class="ow">or</span> <span class="n">fallback</span> <span class="n">to</span> <span class="n">localhost</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">url_str</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">environ</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">CLOUDMQTT_URL</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="n">mqtt</span><span class="p">:</span><span class="o">//</span><span class="n">USERNAME</span><span class="p">:</span><span class="n">PASSWORD</span><span class="nd">@geeknesia.com</span><span class="p">:</span><span class="mi">1883</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)</span>
</span><span class='line'><span class="n">url</span> <span class="o">=</span> <span class="n">urlparse</span><span class="o">.</span><span class="n">urlparse</span><span class="p">(</span><span class="n">url_str</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Connect</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">mqttc</span><span class="o">.</span><span class="n">username_pw_set</span><span class="p">(</span><span class="n">url</span><span class="o">.</span><span class="n">username</span><span class="p">,</span> <span class="n">url</span><span class="o">.</span><span class="n">password</span><span class="p">)</span>
</span><span class='line'><span class="n">mqttc</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="n">url</span><span class="o">.</span><span class="n">hostname</span><span class="p">,</span> <span class="n">url</span><span class="o">.</span><span class="n">port</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Start</span> <span class="n">subscribe</span><span class="p">,</span> <span class="k">with</span> <span class="n">QoS</span> <span class="n">level</span> <span class="mi">0</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">mqttc</span><span class="o">.</span><span class="n">subscribe</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">hello</span><span class="o">/</span><span class="n">world</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="mi">0</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Publish</span> <span class="n">a</span> <span class="n">message</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">mqttc</span><span class="o">.</span><span class="n">publish</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">iot</span><span class="o">/</span><span class="n">live</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">DEVICE_ID</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">Continue</span> <span class="n">the</span> <span class="n">network</span> <span class="n">loop</span><span class="p">,</span> <span class="nb">exit</span> <span class="n">when</span> <span class="n">an</span> <span class="n">error</span> <span class="n">occurs</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">rc</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="k">while</span> <span class="n">rc</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
</span><span class='line'>    <span class="n">rc</span> <span class="o">=</span> <span class="n">mqttc</span><span class="o">.</span><span class="n">loop</span><span class="p">()</span>
</span><span class='line'>    <span class="n">value</span> <span class="o">=</span> <span class="n">gpio</span><span class="o">.</span><span class="n">analogRead</span><span class="p">(</span><span class="n">analogpin</span><span class="p">)</span>
</span><span class='line'>    <span class="n">mqttc</span><span class="o">.</span><span class="n">publish</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">iot</span><span class="o">/</span><span class="n">data</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">code</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;:</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">USERNAME</span><span class="p">:</span><span class="n">PASSWORD</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;,</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">attributes</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;:{</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">LDR</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;:</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span><span class="o">+</span> <span class="o">&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">value</span><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;</span> <span class="o">+&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;}}</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;)</span>
</span><span class='line'>    <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mi">60</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">rc</span><span class="p">:</span> <span class="o">&amp;</span><span class="n">rdquo</span><span class="p">;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">rc</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Analog Input pada <em>module</em> Wiring-x86 mulai dari pin 17-19. Jadi A0 = 17 , dan seterusnya. Untuk saat ini saya menggunakan A03 sebagai Analog Input. Dengan demikian saya menggunakan pin 17.</p>

<p>Jangan lupa ganti DEVICE_ID, USERNAME, dan PASSWORD , sesuai dengan informasi detail dari device yang Anda daftarkan pada <a href="http://geeknesia.com">Geeknesia</a>.
Mari kita execute script Python kita
<code>sh Terminal
$ python mqttClient.py
</code></p>

<p><img class="center" src="/images/blinking-led-edison.jpg" width="320" height="320" title="&lsquo;blinking led edison&rsquo;" >
<img class="center" src="/images/data-device.jpg" title="&lsquo;data-device&rsquo;" ></p>

<p>Intel Edison akan selalu mengirimkan data dari sensor LDR ke <a href="http://geeknesia.com">Geeknesia</a> dengan interval 60 detik.
Semua source saya upload ke Github dengan nama repo <a href="https://github.com/sofianhw/python-mqtt-geeknesia">python-mqtt-geeknesia</a>.</p>

<p>Silakan berkreasi dengan dasar yang sudah ada.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IoT Pada Intel Galileo Menggunakan Platform Dari Geeknesia.com]]></title>
    <link href="http://blog.sofianhw.com/blog/2015/06/13/iot-pada-intel-galileo-menggunakan-platform-dari-geeknesia-dot-com/"/>
    <updated>2015-06-13T21:48:40+07:00</updated>
    <id>http://blog.sofianhw.com/blog/2015/06/13/iot-pada-intel-galileo-menggunakan-platform-dari-geeknesia-dot-com</id>
    <content type="html"><![CDATA[<p>Hari ini sangat luar biasa, karena saya dapat berbagi ilmu pengetahuan tentang &ldquo;Internet of Things&rdquo; dengan menggunakan <em>board</em> dari <a href="http://www.intel.com">intel</a> berupa <em>Intel Galileo</em> dan <em>Intel Edison</em> pada acara <a href="http://www.meetup.com/Bandung-Internet-of-Things-Meetup/events/223152407">Bandung Internet of Things Meetup yang ke 12</a>
Persentasi saya dimulai dari menceritakan apa itu <em>Intel Galileo</em> dan <em>Intel Edison</em>. Pada tulisan saat ini saya tidak akan banyak menulis tentang <em>board</em> tersebut, saya akan bercerita pengalaman sayang menggunakan <em>platform IoT</em> asli <em>made in</em> Bandung yaitu <a href="http://www.geeknesia.com">Geeknesia</a>.</p>

<!-- more -->


<h4>1. Registrasi</h4>

<p>Pertama kita harus registrasi dulu pada websitenya <a href="http://www.geeknesia.com">Geeknesia</a>, Tunggu beberapa saat nanti Anda akan mendapatkan email dari <a href="http://www.geeknesia.com">Geeknesia</a> berupa username dan password untuk masuk ke <em>platform IoT</em> tersebut.</p>

<h4>2. Add New Device</h4>

<p>Setelah mendapatkan akses, kita bisa menambahkan device yang kita punya dengan cara, mengklik button pada pojok kanan atas &ldquo;Add New Device&rdquo;, disini kita akan diminta untuk memberikan informasi <em>device</em> kita.</p>

<p><img class="center" src="/images/add-new-device.jpg" title="&lsquo;add new device&rsquo;" ></p>

<p>jika semua data sudah diisi dengan benar, kita tekan tombol <em>create</em>. Setelah itu kita akan dibawa ke halaman yang memberikan informasi detail tentang device kita dan beberapa contoh API dari <a href="http://www.geeknesia.com">Geeknesia</a> yang dapat kita gunakan nantinya.</p>

<p><img class="center" src="/images/detail-device.jpg" title="&lsquo;detail device&rsquo;" ></p>

<h4>3. Menghubungkan Intel Galileo ke Geeknesia</h4>

<p>Ada beberapa cara untuk menghubungkan Intel Galileo dan <a href="http://www.geeknesia.com">Geeknesia</a>. Namun pada artikel ini saya hanya akan membahas dengan menggunakan bahasa pemrogramman <em><a href="https://nodejs.org">nodejs</a></em> dan <em>protocol <a href="http://mqtt.org">mqtt</a></em>.
Saya menggunakan Grove Starter Kit, untuk memudahkan dalam menggunakan LED dan sensor LDR.</p>

<p><img class="center" src="/images/intel-galileo-geeknesia.jpg" title="&lsquo;intel galileo geeknesia&rsquo;" ></p>

<p>Persiapkan Intel Galileo kalian, pertama-tama remote login Intel Galileo, bisa melalui ssh ataupun telnet ataupun screen. Untuk saat ini saya menggunakan ssh.
Kemudian tulis kode berikut dan simpan
<code>JavaScript package.json
{
  "name": "galileo-geeknesia",
  "version": "1.0.0",
  "description": "menghubungkan galileo ke geeknesia",
  "main": "galileo-geeknesia.js",
  "dependencies": {
    "galileo-io": "^0.8.14",
    "mqtt": "^1.1.4"
  },
  "devDependencies": {},
  "scripts": {
    "test": "echo \"Error: no test specified\" &amp;&amp; exit 1"
  },
  "author": "sofian hadiwijaya",
  "license": "ISC"
}
</code></p>

<pre><code class="JavaScript galileo-geeknesia.js">var mqtt = require('mqtt'), url = require('url'), Galileo = require("galileo-io");
var mqtt_url = url.parse('mqtt://USERNAME:PASSWORD@geeknesia.com:1883');
var auth = (mqtt_url.auth || ':').split(':');
var board = new Galileo();
var LDR = 0;

var client = mqtt.createClient(mqtt_url.port, mqtt_url.hostname, {
  username: auth[0],
  password: auth[1] 
});

client.on('connect', function() { // When connected
  client.publish('iot/live', 'DEVICE_ID', function() {
    console.log("Menghubungkan ke Geeknesia");
  });
  board.pinMode(8,board.MODES.OUTPUT)
  board.analogRead("A3",function(data){
    LDR = data;
  });
  setInterval(function(){
    if(LDR &gt;=300)
      board.digitalWrite(8,1);
    else
      board.digitalWrite(8,0);
    client.publish('iot/data', '{"code":"USERNAME:PASSWORD","attributes":{"LDR":"'+LDR+'"}}', function() {
      console.log("Send data LDR = "+LDR);
    });
  }, 1000);
});
</code></pre>

<p>Ganti USERNAME, PASSWORD, dan DEVICE_ID sesuai dengan informasi detail dari device kalian. Source codenya saya upload ke <a href="http://www.github.com">github</a>, yang mau <em>clone</em> ataupun <em>fork</em> bisa ke link <a href="https://github.com/sofianhw/intel-galileo-geeknesia">intel-galileo-geeknesia</a>.
Untuk menjalan kode tersebut sebelumnya kita ketik perintah
<code>Bash
$ npm install
</code>
perintah tersebut akan menginstal <em>dependencies</em> dari kode kita. Setelah itu untuk menjalankan <em>script</em> tersebut kita ketik perintah
<code>Bash
$ node galileo-geeknesia.js
</code>
untuk melihat apakah kode tersebut berjalan dengan sempurna, kita kembali ke <em>dashboard</em> <a href="http://www.geeknesia.com">Geeknesia</a>. Kita pastikan device kita terhubung dan mengirimkan data, bisa dilihat pada gambar berikut</p>

<p><img class="center" src="/images/data-device.jpg" title="&lsquo;data device&rsquo;" ></p>

<p>Pengembangan selanjut, kita bisa bikin dashboard yang mendapatkan data dari API <a href="http://www.geeknesia.com">Geeknesia</a>.</p>
]]></content>
  </entry>
  
</feed>
