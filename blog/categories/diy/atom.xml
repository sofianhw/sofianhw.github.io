<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Diy | Sofian Hadiwijaya]]></title>
  <link href="http://www.sofianhw.com/blog/categories/diy/atom.xml" rel="self"/>
  <link href="http://www.sofianhw.com/"/>
  <updated>2015-10-09T02:34:07+07:00</updated>
  <id>http://www.sofianhw.com/</id>
  <author>
    <name><![CDATA[Sofian Hadiwijaya]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[DIY - Kerekan Bendera Dikontrol via Twitter]]></title>
    <link href="http://www.sofianhw.com/blog/2015/08/20/diy-kerekan-bendera-dikontrol-via-twitter/"/>
    <updated>2015-08-20T09:47:39+07:00</updated>
    <id>http://www.sofianhw.com/blog/2015/08/20/diy-kerekan-bendera-dikontrol-via-twitter</id>
    <content type="html"><![CDATA[<p>4 Agustus 2015, melalui pembicaraan singkat team <a href="http://code4nation.org">Code4nation</a> pada platform <em>slack</em>, salah satu <em>member</em> dari <a href="http://techinasia.com">Techinasia</a> mengemukakan ide dari CTO mereka tentang <em>campaign</em> acara <a href="http://hackathonmerdeka.id">Hackathon Merdeka</a> yaitu membuat kerekan bendera yang dikontrol via <a href="https://twitter.com">twitter</a>, jadi ketika ada <em>tweet</em> dengan hashtag tertentu maka si bendera akan dengan sendirinya naik perlahan. Hal ini disambut positif oleh mas <a href="https://www.facebook.com/ainunnajib">Ainun Najib</a> (penggagas <a href="http://kawalpemilu.org">kawalpemilu</a> dan <a href="http://laporpresiden.id">laporpresiden</a>). &ldquo;@sofianhw bisa upayakan IoT (<em>Internet of Things</em>) -nya?&rdquo; ucap mas <a href="https://www.facebook.com/ainunnajib">Ainun Najib</a>. Seketika itu juga saya jawab &ldquo;Bisa!!&rdquo;.</p>

<p><img class="center" src="/images/sofian-hadiwijaya-bendera.JPG" width="640" height="640" title="&lsquo;sofian hadiwijaya bendera&rsquo;" ></p>

<!-- more -->


<p>Diselah-selah kesibukan mempersiapkan <em>event</em> <a href="http://therunway.tresemme.co.id/experience">Tresemme</a> pada acara Market Museum. Saya mencoba menyiapkan bahan, pertama yang terngiang dipikiran saya yaitu <em>stepper motor</em> agar pegerakannya lebih persisi. Dan untuk katrolnya sendiri saya akan menggunakan <em>timing belt printer</em>.</p>

<p>Pencarianpun dimulai, dari <em>online</em> maupun <em>offline</em>. <em>Timing belt printer</em> mayoritas pendek, saya membutuhkan minimal satu meter. Akhirnya nemu <em>timing belt 3d printer</em> di <a href="https://www.tokopedia.com">tokopedia</a> panjangnya pas banget satu meter.</p>

<p>Pada tanggal 13 Agustus 2015, <em>timing belt 3d printer</em> yang saya pesan tiba di tempat tinggal saya. Tapi saat itu saya lagi sibuk-sibuknya <em>loading</em> barang untuk event. Akhirnya tanggal 16 Agustus 2015, barulah saya punya kesempatan untuk menyelesaikan projek ini. Berikut barang-barang yang saya gunakan :</p>

<ul>
<li>Intel Edison</li>
<li>ULN2803a</li>
<li>Stepper Motor</li>
<li>Timing belt 3d printer</li>
<li>Dudukan untuk kamera</li>
<li>Gagang Sapu</li>
<li>Kabel Tie</li>
</ul>


<p><img class="center" src="/images/intel-edison.JPG" width="480" height="480" title="&lsquo;intel edison&rsquo;" >
<img class="center" src="/images/uln2803a-depan.JPG" width="480" height="480" title="&lsquo;uln2803a depan&rsquo;" >
<img class="center" src="/images/stepper-motor.JPG" width="480" height="480" title="&lsquo;stepper motor&rsquo;" >
<img class="center" src="/images/timing-belt.JPG" width="480" height="480" title="&lsquo;timing belt 3d printer&rsquo;" ></p>

<p>Pertama-tama saya akan rakit tiang benderanya dulu. Ikatkan dudukan kamera dan stepper motor pada gagang sapu menggunakan kabel tie.</p>

<p><img class="center" src="/images/terikat-atas.JPG" width="480" height="480" title="&lsquo;terikat atas&rsquo;" >
<img class="center" src="/images/terikat-bawah.JPG" width="480" height="480" title="&lsquo;terikat bawah&rsquo;" ></p>

<p>pastikan <em>timing belt</em> tidak terlalu kencang maupun kendor.</p>

<p>Setelah itu marilah kita rakit rangkaian ULN dan intel edison sebagai berikut :</p>

<p><img class="center" src="/images/scheme-uln-arduino-stepper.jpg" width="480" height="480" title="&lsquo;scheme uln arduino stepper&rsquo;" >
<img class="center" src="/images/uln-depan.JPG" width="480" height="480" title="&lsquo;uln2803a depan&rsquo;" >
<img class="center" src="/images/uln-samping.JPG" width="480" height="480" title="&lsquo;uln2803a samping&rsquo;" ></p>

<p>Mari kita sambungkan keseluruhan <em>system</em></p>

<p><img class="center" src="/images/kerekan-bendera-diy.JPG" width="480" height="480" title="&lsquo;kerekan bendera diy&rsquo;" ></p>

<p>Selanjutnya mari kita putar-putar kerekannya. Berikut kode yang saya tulis menggunakan bahasa <a href="http://blog.sofianhw.com/blog/2015/06/29/pengenalan-bahasa-pemrogramman-python/">python</a>.</p>

<pre><code class="Python countFlagSteps.py https://github.com/sofianhw/flagpole/blob/master/countFlagSteps.py">import time
from wiringx86 import GPIOEdison as GPIO
gpio = GPIO(debug=False)
pin1 = 3
pin2 = 4
pin3 = 5
pin4 = 6
index = 0

print 'Setting up pin %d' % pin1
gpio.pinMode(pin1, gpio.OUTPUT)
print 'Setting up pin %d' % pin2
gpio.pinMode(pin2, gpio.OUTPUT)
print 'Setting up pin %d' % pin3
gpio.pinMode(pin3, gpio.OUTPUT)
print 'Setting up pin %d' % pin4
gpio.pinMode(pin4, gpio.OUTPUT)

print 'Go up now...'
try:
  while(True):
    gpio.digitalWrite(pin4, gpio.LOW)     
    gpio.digitalWrite(pin2, gpio.HIGH)    
    time.sleep(0.01)                      

    gpio.digitalWrite(pin1, gpio.LOW)     
    gpio.digitalWrite(pin3, gpio.HIGH)    
    time.sleep(0.01)                      

    gpio.digitalWrite(pin2, gpio.LOW)     
    gpio.digitalWrite(pin4, gpio.HIGH)    
    time.sleep(0.01)                      

    gpio.digitalWrite(pin3, gpio.LOW)     
    gpio.digitalWrite(pin1, gpio.HIGH)    
    time.sleep(0.01)                      

    index=index+1

# When you get tired of seeing the led blinking kill the loop with Ctrl-C.
except KeyboardInterrupt:                                                 
  print '\nCleaning up...'                                              
  print 'total step %d' % index                                           
  gpio.digitalWrite(pin1, gpio.LOW)                                     
  gpio.digitalWrite(pin2, gpio.LOW)                                     
  gpio.digitalWrite(pin3, gpio.LOW)                                     
  gpio.digitalWrite(pin4, gpio.LOW)                                     

  # Do a general cleanup. Calling this function is not mandatory.       
  gpio.cleanup()     
</code></pre>

<p>eksekusi kode tersebut, ketika bendera sudah mencapai puncaknya tekan &ldquo;Ctrl + C&rdquo; untuk <em>interrupt</em> program, lalu program akan memberikan output berapa putaran yang diperlukan untuk mencapai puncak.</p>

<pre><code class="sh Terminal">$ python countFlagSteps.py
</code></pre>

<p>Ketika semua step dianggap sukses sekarang marilah kita hubungkan ke twitter.
sebelum memulai ada baiknya kita membuat <a href="https://apps.twitter.com">aplikasi pada twitter</a> kita.</p>

<p><img class="center" src="/images/twitter-hackathon-merdeka.png" width="480" height="480" title="&lsquo;twitter hackathon merdeka&rsquo;" ></p>

<p>Kita akan memanfaatkan <a href="https://dev.twitter.com/streaming/overview">API Streaming</a> untuk mendapatkan jumlah tweet secara <em>real-time</em>.</p>

<pre><code class="Python countTweets.py https://github.com/sofianhw/flagpole/blob/master/countTweets.py">import argparse
import time
from wiringx86 import GPIOEdison as GPIO
from TwitterAPI import TwitterAPI, TwitterOAuth, TwitterRestPager
gpio = GPIO(debug=False)
pin1 = 3
pin2 = 4
pin3 = 5
pin4 = 6
COUNT = 100 # search download batch size

def setup():
        print 'Setting up pin %d' % pin1
        gpio.pinMode(pin1, gpio.OUTPUT)
        print 'Setting up pin %d' % pin2
        gpio.pinMode(pin2, gpio.OUTPUT)
        print 'Setting up pin %d' % pin3
        gpio.pinMode(pin3, gpio.OUTPUT)
        print 'Setting up pin %d' % pin4
        gpio.pinMode(pin4, gpio.OUTPUT)                          

def puter():                                                     
        print "muter"                                            
        for i in range(100):                                     
                print i                                          
                gpio.digitalWrite(pin4, gpio.LOW)                
                gpio.digitalWrite(pin2, gpio.HIGH)               
                time.sleep(0.01)                  

                gpio.digitalWrite(pin1, gpio.LOW) 
                gpio.digitalWrite(pin3, gpio.HIGH)
                time.sleep(0.01)                  

                gpio.digitalWrite(pin2, gpio.LOW) 
                gpio.digitalWrite(pin4, gpio.HIGH)
                time.sleep(0.01)                  

                gpio.digitalWrite(pin3, gpio.LOW) 
                gpio.digitalWrite(pin1, gpio.HIGH)
                time.sleep(0.01)                  

def count_old_tweets(api, word_list): 
        words = ' OR '.join(word_list)                           
        count = 0                                                
        while True:                                              
                pager = TwitterRestPager(api, 'search/tweets', {'q':words, 'coun
                for item in pager.get_iterator():                               
                        if 'text' in item:                                      
                                count += 1                                      
                                print(count)                                    
                        elif 'message' in item:                                 
                                if item['code'] == 131:                         
                                        continue # ignore internal server error 
                                elif item['code'] == 88:                        
                                        print('Suspend search until %s' % search
                                raise Exception('Message from twitter: %s' % ite


def count_new_tweets(api, word_list):                                           
        words = ','.join(word_list)                                             
        count = 0                                                               
        total_skip = 0                                                          
        while True:                                                             
                skip = 0                                                        
                try:          
                        r = api.request('statuses/filter', {'track':words})     
                        while True:                                             
                                for item in r.get_iterator():                   
                                        if 'text' in item:                      
                                                count += 1                      
                                                puter()                         
                                                print(count + skip + total_skip)
                                        elif 'limit' in item:                   
                                                skip = item['limit'].get('track'
                                                #print('\n\n\n*** Skipping %d tw
                                        elif 'disconnect' in item:              
                                                raise Exception('Disconnect: %s'
                except Exception as e:                                          
                        print('*** MUST RECONNECT %s' % e)                      
                total_skip += skip                                              


if __name__ == '__main__':                                                      
        parser = argparse.ArgumentParser(description='Count occurance of word(s)
        parser.add_argument('-past', action='store_true', help='search historic 
        parser.add_argument('-oauth', metavar='FILENAME', type=str, help='read O
        parser.add_argument('words', metavar='W', type=str, nargs='+', help='wor
        args = parser.parse_args() 

        oauth = TwitterOAuth.read_file(args.oauth)                              
        api = TwitterAPI(oauth.consumer_key, oauth.consumer_secret, oauth.access

        try:                                                                    
                setup()                                                         
                if args.past:                                                   
                        count_old_tweets(api, args.words)                       
                else:                                                           
                        count_new_tweets(api, args.words)                       
        except KeyboardInterrupt:                                               
                print('\nTerminated by user\n')                                 
                gpio.digitalWrite(pin1, gpio.LOW)                               
                gpio.digitalWrite(pin2, gpio.LOW)                               
                gpio.digitalWrite(pin3, gpio.LOW)                               
                gpio.digitalWrite(pin4, gpio.LOW)                               

                # Do a general cleanup. Calling this function is not mandatory. 
                gpio.cleanup()                                                  
        except Exception as e:                                                  
                print('*** STOPPED %s\n' % e)  
</code></pre>

<pre><code class="sh token_key.txt https://github.com/sofianhw/flagpole/blob/master/token_key.txt">consumer_key=
consumer_secret=
access_token_key=
access_token_secret=
</code></pre>

<p>mari kita test apakah kode yang kita buat bekerja.</p>

<pre><code class="sh Terminal">$ python countTweets.py -oauth token_key.txt [kata]
</code></pre>

<p>Berikut video yang sudah dipercepat, soalnya kemaren butuh 2jam.</p>

<p><div class="embed-video-container"><iframe src="//www.youtube.com/embed/5ZYtQOPkfqs" allowfullscreen></iframe></div></p>

<p>Semua source code saya upload ke account github saya <a href="https://github.com/sofianhw/flagpole">sofianhw/flagpole</a>.</p>
]]></content>
  </entry>
  
</feed>
