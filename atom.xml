<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Sofian Hadiwijaya]]></title>
  <link href="http://www.sofianhw.com/atom.xml" rel="self"/>
  <link href="http://www.sofianhw.com/"/>
  <updated>2015-10-21T01:02:38+07:00</updated>
  <id>http://www.sofianhw.com/</id>
  <author>
    <name><![CDATA[Sofian Hadiwijaya]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Google Game DevFest 2015 - Virtual Reality]]></title>
    <link href="http://www.sofianhw.com/blog/2015/10/20/google-game-devfest-2015-virtual-reality/"/>
    <updated>2015-10-20T23:48:10+07:00</updated>
    <id>http://www.sofianhw.com/blog/2015/10/20/google-game-devfest-2015-virtual-reality</id>
    <content type="html"><![CDATA[<p>Setelah beberapa kali menjadi peserta dibeberapa acara Google baik di Indonesia dan Singapura. Kali ini saya beruntung karena diundang menjadi salah satu pembicara diacara Google Game DevFest 2015. Saya mendapatkan kesempatan membahas tentang &ldquo;Developing Virtual Reality Content&rdquo;.</p>

<p><img class="center" src="http://www.sofianhw.com/images/EHmPaN4.jpg" title="'Reality is merely an illusion - Virtual Reality'" ></p>

<!-- more -->


<p>Tahun ini DevFest diselenggarakan lima kota antara lain : Jakarta, Bandung, Jogja, Semarang, dan Surabaya. Saya sendiri mendapat tugas ditiga kota yakni: Jogja, Semarang, dan Surabaya.</p>

<p><img class="center" src="http://www.sofianhw.com/images/devfest2015-jogja.jpg" title="'Google Game DevFest 2015 Jogja'" >
<img class="center" src="http://www.sofianhw.com/images/devfest2015-semarang.jpg" title="'Google Game DevFest 2015 Semarang'" ></p>

<p>Selain menjadi pembicara, saya juga diberi kepercayaan untuk memberikan workshop tentang Virtual Reality. Mari kita bahas apa itu Virtual Reality.</p>

<p><img class="center" src="http://www.sofianhw.com/images/devfest2015-surabaya.jpg" title="'Google Game DevFest 2015 Surabaya'" ></p>

<p>Seperti biasa sebelum masuk kemateri inti saya memperkenalkan diri dulu kepada peserta.</p>

<blockquote><p>Virtual Reality (VR), which can be referred to as immersive multimedia or computer-simulated life, replicates an environment that simulates physical presence in places in the real world or imagined worlds and lets the user interact in that world. - <a href="https://en.wikipedia.org/wiki/Virtual_reality">Wikipedia</a></p></blockquote>

<p>Ternyata Virtual Reality bukanlah hal yang baru. Pada tahun 1968, <a href="https://en.wikipedia.org/wiki/Ivan_Sutherland">Ivan Sutherland</a>, telah bereksperimen dengan head-mounted displays, yang nantinya menjadi cikal bakal hardware Virtual Reality sekarang.</p>

<p><img class="center" src="http://www.sofianhw.com/images/ivan-sutherland-virtual-reality.jpg" title="'Ivan Sutherland Virtual Reality'" ></p>

<p>Dan jika kita lihat gambar diatas, sepertinya sangat kompleks untuk membuat peralatan Virtual Reality. Seiring berjalannya penjualan <em>smartphone</em> yang dahsyat, berpengaruh terhadap harga bahan-bahan pendukung <em>smartphone</em>. Dimana beberapa hardware pendukung teknologi Virtual Reality memiliki kesamaan dengan <em>smartphone</em>. Sehingga sekarang Google berniat membawa teknologi Virtual Reality bisa dinikmati semua orang. Maka dari itu Google memperkenalkan <a href="https://developers.google.com/cardboard">CardBoard</a>.</p>

<p><img class="center" src="http://www.sofianhw.com/images/cardboard-google.jpg" title="'Google Cardboard'" ></p>

<p>Berikut slide presentasi saya:</p>

<iframe src="http://www.slideshare.net/slideshow/embed_code/54180986 " width="595" height="446" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen></iframe>


<p></p>

<p>Setelah memberikan seminar singkat tentang apa itu Virtual Reality dan bagaimana cara membuat konten dengan teknologi terbaru tersebut. Pada sorenya kita lanjut workshop untuk membuat aplikasi virtual reality yang sederhana. Jika Anda tertarik untuk mengikutinya juga, kalian bisa menuju link berikut <a href="http://io2015codelabs.appspot.com/codelabs/cardboard-unity">Cardboard Codelab</a>.</p>

<p><img class="center" src="http://www.sofianhw.com/images/virtual-reality-codelab.JPG" title="'Virtual Reality Codelab'" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Amazon Meluncurkan AWS IoT (Internet of Things)]]></title>
    <link href="http://www.sofianhw.com/blog/2015/10/09/amazon-meluncurkan-aws-iot-internet-of-things/"/>
    <updated>2015-10-09T01:25:51+07:00</updated>
    <id>http://www.sofianhw.com/blog/2015/10/09/amazon-meluncurkan-aws-iot-internet-of-things</id>
    <content type="html"><![CDATA[<p>Akhirnya Amazon meluncurkan <a href="https://aws.amazon.com/iot/">IoT Platform</a> pada acara re:Invent developer conference di Las Vegas.</p>

<p><img class="center" src="https://tctechcrunch2011.files.wordpress.com/2015/10/dsc01840.jpg?w=738"></p>

<!-- more -->


<p>Amazon menjelaskan, &ldquo;AWS IoT memungkinkan perangkat yang terhubung dengan mudah dan aman berinteraksi dengan aplikasi cloud dan perangkat lainnya.&rdquo;. Platform yang masih versi beta tersebut, dapat mengelola miliaran perangkat dan triliunan pesan, &ldquo;Dan dapat memproses dan mengatur rute pesan-pesan ke AWS endpoint dan perangkat lain andal dan aman.&rdquo;</p>

<p>AWS IoT akan mengintegrasikan Lambda, Amazon Kinesis, Amazon S3, Amazon Machine Learning, dan Amazon DynamoDB untuk membangun aplikasi IOT, mengelola infrastruktur dan menganalisis data.</p>

<p>&ldquo;Connected does not necessarily mean useful,&rdquo; kata Werner Vogels - CTO Amazon.</p>

<p><img class="center" src="https://tctechcrunch2011.files.wordpress.com/2015/10/dsc01848.jpg?w=1024&h=680"></p>

<p>Fitur yang akan disediakan AWS IoT antara lain Device Gateway, Rules-based engine, dan Registry. Selain itu ada juga Device Shadows, yang mana fitur tersebut memungkinkan Anda melacak data tentang perangkat ketika mereka offline dan mengirimkannya kembali ke dalam sistem setelah mereka kembali online.</p>

<p>Platform ini akan memudahkan pengembang untuk memproses data yang masuk dari perangkat yang menggunakan gateway standar dan protokol seperti MQTT dan HTTPS.</p>

<p>Seperti dengan layanan AWS lainnya, harga untuk platform IOT berdasarkan atas apa yang Anda gunakan tanpa biaya minimum. Harga dihitung berdasarkan jumlah pesan yang kirim ke AWS IoT (Publishing Cost), dan jumlah pesan yang disampaikan oleh AWS IoT ke perangkat atau aplikasi (Delivery Cost). Sebagai pemanis untuk membuat Anda tetap berada dalam ekosistem AWS, harga tidak termasuk konektivitas ke beberapa layanan AWS lainnya, khususnya Amazon S3, Amazon DynamoDB, AWS Lambda, Amazon Kinesis, Amazon SNS, dan Amazon SQS.</p>

<p>AWS IoT menawarkan free tier dari 250.000 pesan gratis (published or delivered) per bulan, selama 12 bulan. Setelah itu, berikut tabel harganya:</p>

<table>
<thead>
<tr>
<th> Region                 </th>
<th> Harga                   </th>
</tr>
</thead>
<tbody>
<tr>
<td> US East (N. Virginia)  </td>
<td> $5 per million messages </td>
</tr>
<tr>
<td> US West (Oregon)       </td>
<td> $5 per million messages </td>
</tr>
<tr>
<td> EU (Ireland)           </td>
<td> $5 per million messages </td>
</tr>
<tr>
<td> Asia Pacific (Tokyo)   </td>
<td> $5 per million messages </td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Zen of Python]]></title>
    <link href="http://www.sofianhw.com/blog/2015/09/07/the-zen-of-python/"/>
    <updated>2015-09-07T11:50:44+07:00</updated>
    <id>http://www.sofianhw.com/blog/2015/09/07/the-zen-of-python</id>
    <content type="html"><![CDATA[<p>Beautiful is better than ugly.</p>

<p>Explicit is better than implicit.</p>

<p>Simple is better than complex.</p>

<p>Complex is better than complicated.</p>

<p>Flat is better than nested.</p>

<p>Sparse is better than dense.</p>

<p>Readability counts.</p>

<!-- more -->


<p>Special cases aren&rsquo;t special enough to break the rules.</p>

<p>Although practicality beats purity.</p>

<p>Errors should never pass silently.</p>

<p>Unless explicitly silenced.</p>

<p>In the face of ambiguity, refuse the temptation to guess.</p>

<p>There should be one&ndash; and preferably only one &ndash;obvious way to do it.</p>

<p>Although that way may not be obvious at first unless you&rsquo;re Dutch.</p>

<p>Now is better than never.</p>

<p>Although never is often better than <em>right</em> now.</p>

<p>If the implementation is hard to explain, it&rsquo;s a bad idea.</p>

<p>If the implementation is easy to explain, it may be a good idea.</p>

<p>Namespaces are one honking great idea &ndash; let&rsquo;s do more of those!</p>

<p><a href="https://www.python.org/dev/peps/pep-0020/">Source</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DIY - Kerekan Bendera Dikontrol via Twitter]]></title>
    <link href="http://www.sofianhw.com/blog/2015/08/20/diy-kerekan-bendera-dikontrol-via-twitter/"/>
    <updated>2015-08-20T09:47:39+07:00</updated>
    <id>http://www.sofianhw.com/blog/2015/08/20/diy-kerekan-bendera-dikontrol-via-twitter</id>
    <content type="html"><![CDATA[<p>4 Agustus 2015, melalui pembicaraan singkat team <a href="http://code4nation.org">Code4nation</a> pada platform <em>slack</em>, salah satu <em>member</em> dari <a href="http://techinasia.com">Techinasia</a> mengemukakan ide dari CTO mereka tentang <em>campaign</em> acara <a href="http://hackathonmerdeka.id">Hackathon Merdeka</a> yaitu membuat kerekan bendera yang dikontrol via <a href="https://twitter.com">twitter</a>, jadi ketika ada <em>tweet</em> dengan hashtag tertentu maka si bendera akan dengan sendirinya naik perlahan. Hal ini disambut positif oleh mas <a href="https://www.facebook.com/ainunnajib">Ainun Najib</a> (penggagas <a href="http://kawalpemilu.org">kawalpemilu</a> dan <a href="http://laporpresiden.id">laporpresiden</a>). &ldquo;@sofianhw bisa upayakan IoT (<em>Internet of Things</em>) -nya?&rdquo; ucap mas <a href="https://www.facebook.com/ainunnajib">Ainun Najib</a>. Seketika itu juga saya jawab &ldquo;Bisa!!&rdquo;.</p>

<p><img class="center" src="http://www.sofianhw.com/images/sofian-hadiwijaya-bendera.JPG" width="640" height="640" title="'sofian hadiwijaya bendera'" ></p>

<!-- more -->


<p>Diselah-selah kesibukan mempersiapkan <em>event</em> <a href="http://therunway.tresemme.co.id/experience">Tresemme</a> pada acara Market Museum. Saya mencoba menyiapkan bahan, pertama yang terngiang dipikiran saya yaitu <em>stepper motor</em> agar pegerakannya lebih persisi. Dan untuk katrolnya sendiri saya akan menggunakan <em>timing belt printer</em>.</p>

<p>Pencarianpun dimulai, dari <em>online</em> maupun <em>offline</em>. <em>Timing belt printer</em> mayoritas pendek, saya membutuhkan minimal satu meter. Akhirnya nemu <em>timing belt 3d printer</em> di <a href="https://www.tokopedia.com">tokopedia</a> panjangnya pas banget satu meter.</p>

<p>Pada tanggal 13 Agustus 2015, <em>timing belt 3d printer</em> yang saya pesan tiba di tempat tinggal saya. Tapi saat itu saya lagi sibuk-sibuknya <em>loading</em> barang untuk event. Akhirnya tanggal 16 Agustus 2015, barulah saya punya kesempatan untuk menyelesaikan projek ini. Berikut barang-barang yang saya gunakan :</p>

<ul>
<li>Intel Edison</li>
<li>ULN2803a</li>
<li>Stepper Motor</li>
<li>Timing belt 3d printer</li>
<li>Dudukan untuk kamera</li>
<li>Gagang Sapu</li>
<li>Kabel Tie</li>
</ul>


<p><img class="center" src="http://www.sofianhw.com/images/intel-edison.JPG" width="480" height="480" title="'intel edison'" >
<img class="center" src="http://www.sofianhw.com/images/uln2803a-depan.JPG" width="480" height="480" title="'uln2803a depan'" >
<img class="center" src="http://www.sofianhw.com/images/stepper-motor.JPG" width="480" height="480" title="'stepper motor'" >
<img class="center" src="http://www.sofianhw.com/images/timing-belt.JPG" width="480" height="480" title="'timing belt 3d printer'" ></p>

<p>Pertama-tama saya akan rakit tiang benderanya dulu. Ikatkan dudukan kamera dan stepper motor pada gagang sapu menggunakan kabel tie.</p>

<p><img class="center" src="http://www.sofianhw.com/images/terikat-atas.JPG" width="480" height="480" title="'terikat atas'" >
<img class="center" src="http://www.sofianhw.com/images/terikat-bawah.JPG" width="480" height="480" title="'terikat bawah'" ></p>

<p>pastikan <em>timing belt</em> tidak terlalu kencang maupun kendor.</p>

<p>Setelah itu marilah kita rakit rangkaian ULN dan intel edison sebagai berikut :</p>

<p><img class="center" src="http://www.sofianhw.com/images/scheme-uln-arduino-stepper.jpg" width="480" height="480" title="'scheme uln arduino stepper'" >
<img class="center" src="http://www.sofianhw.com/images/uln-depan.JPG" width="480" height="480" title="'uln2803a depan'" >
<img class="center" src="http://www.sofianhw.com/images/uln-samping.JPG" width="480" height="480" title="'uln2803a samping'" ></p>

<p>Mari kita sambungkan keseluruhan <em>system</em></p>

<p><img class="center" src="http://www.sofianhw.com/images/kerekan-bendera-diy.JPG" width="480" height="480" title="'kerekan bendera diy'" ></p>

<p>Selanjutnya mari kita putar-putar kerekannya. Berikut kode yang saya tulis menggunakan bahasa <a href="http://blog.sofianhw.com/blog/2015/06/29/pengenalan-bahasa-pemrogramman-python/">python</a>.</p>

<figure class='code'><figcaption><span>countFlagSteps.py</span><a href='https://github.com/sofianhw/flagpole/blob/master/countFlagSteps.py'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class='Python'><span class='line'><span class="kn">import</span> <span class="nn">time</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">wiringx86</span> <span class="kn">import</span> <span class="n">GPIOEdison</span> <span class="k">as</span> <span class="n">GPIO</span>
</span><span class='line'><span class="n">gpio</span> <span class="o">=</span> <span class="n">GPIO</span><span class="p">(</span><span class="n">debug</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</span><span class='line'><span class="n">pin1</span> <span class="o">=</span> <span class="mi">3</span>
</span><span class='line'><span class="n">pin2</span> <span class="o">=</span> <span class="mi">4</span>
</span><span class='line'><span class="n">pin3</span> <span class="o">=</span> <span class="mi">5</span>
</span><span class='line'><span class="n">pin4</span> <span class="o">=</span> <span class="mi">6</span>
</span><span class='line'><span class="n">index</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span> <span class="s">&#39;Setting up pin </span><span class="si">%d</span><span class="s">&#39;</span> <span class="o">%</span> <span class="n">pin1</span>
</span><span class='line'><span class="n">gpio</span><span class="o">.</span><span class="n">pinMode</span><span class="p">(</span><span class="n">pin1</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">OUTPUT</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span> <span class="s">&#39;Setting up pin </span><span class="si">%d</span><span class="s">&#39;</span> <span class="o">%</span> <span class="n">pin2</span>
</span><span class='line'><span class="n">gpio</span><span class="o">.</span><span class="n">pinMode</span><span class="p">(</span><span class="n">pin2</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">OUTPUT</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span> <span class="s">&#39;Setting up pin </span><span class="si">%d</span><span class="s">&#39;</span> <span class="o">%</span> <span class="n">pin3</span>
</span><span class='line'><span class="n">gpio</span><span class="o">.</span><span class="n">pinMode</span><span class="p">(</span><span class="n">pin3</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">OUTPUT</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span> <span class="s">&#39;Setting up pin </span><span class="si">%d</span><span class="s">&#39;</span> <span class="o">%</span> <span class="n">pin4</span>
</span><span class='line'><span class="n">gpio</span><span class="o">.</span><span class="n">pinMode</span><span class="p">(</span><span class="n">pin4</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">OUTPUT</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span> <span class="s">&#39;Go up now...&#39;</span>
</span><span class='line'><span class="k">try</span><span class="p">:</span>
</span><span class='line'>  <span class="k">while</span><span class="p">(</span><span class="bp">True</span><span class="p">):</span>
</span><span class='line'>    <span class="n">gpio</span><span class="o">.</span><span class="n">digitalWrite</span><span class="p">(</span><span class="n">pin4</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">LOW</span><span class="p">)</span>
</span><span class='line'>    <span class="n">gpio</span><span class="o">.</span><span class="n">digitalWrite</span><span class="p">(</span><span class="n">pin2</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">HIGH</span><span class="p">)</span>
</span><span class='line'>    <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mf">0.01</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">gpio</span><span class="o">.</span><span class="n">digitalWrite</span><span class="p">(</span><span class="n">pin1</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">LOW</span><span class="p">)</span>
</span><span class='line'>    <span class="n">gpio</span><span class="o">.</span><span class="n">digitalWrite</span><span class="p">(</span><span class="n">pin3</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">HIGH</span><span class="p">)</span>
</span><span class='line'>    <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mf">0.01</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">gpio</span><span class="o">.</span><span class="n">digitalWrite</span><span class="p">(</span><span class="n">pin2</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">LOW</span><span class="p">)</span>
</span><span class='line'>    <span class="n">gpio</span><span class="o">.</span><span class="n">digitalWrite</span><span class="p">(</span><span class="n">pin4</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">HIGH</span><span class="p">)</span>
</span><span class='line'>    <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mf">0.01</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">gpio</span><span class="o">.</span><span class="n">digitalWrite</span><span class="p">(</span><span class="n">pin3</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">LOW</span><span class="p">)</span>
</span><span class='line'>    <span class="n">gpio</span><span class="o">.</span><span class="n">digitalWrite</span><span class="p">(</span><span class="n">pin1</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">HIGH</span><span class="p">)</span>
</span><span class='line'>    <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mf">0.01</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">index</span><span class="o">=</span><span class="n">index</span><span class="o">+</span><span class="mi">1</span>
</span><span class='line'>
</span><span class='line'><span class="c"># When you get tired of seeing the led blinking kill the loop with Ctrl-C.</span>
</span><span class='line'><span class="k">except</span> <span class="ne">KeyboardInterrupt</span><span class="p">:</span>
</span><span class='line'>  <span class="k">print</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">Cleaning up...&#39;</span>
</span><span class='line'>  <span class="k">print</span> <span class="s">&#39;total step </span><span class="si">%d</span><span class="s">&#39;</span> <span class="o">%</span> <span class="n">index</span>
</span><span class='line'>  <span class="n">gpio</span><span class="o">.</span><span class="n">digitalWrite</span><span class="p">(</span><span class="n">pin1</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">LOW</span><span class="p">)</span>
</span><span class='line'>  <span class="n">gpio</span><span class="o">.</span><span class="n">digitalWrite</span><span class="p">(</span><span class="n">pin2</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">LOW</span><span class="p">)</span>
</span><span class='line'>  <span class="n">gpio</span><span class="o">.</span><span class="n">digitalWrite</span><span class="p">(</span><span class="n">pin3</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">LOW</span><span class="p">)</span>
</span><span class='line'>  <span class="n">gpio</span><span class="o">.</span><span class="n">digitalWrite</span><span class="p">(</span><span class="n">pin4</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">LOW</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c"># Do a general cleanup. Calling this function is not mandatory.       </span>
</span><span class='line'>  <span class="n">gpio</span><span class="o">.</span><span class="n">cleanup</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>eksekusi kode tersebut, ketika bendera sudah mencapai puncaknya tekan &ldquo;Ctrl + C&rdquo; untuk <em>interrupt</em> program, lalu program akan memberikan output berapa putaran yang diperlukan untuk mencapai puncak.</p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>python countFlagSteps.py
</span></code></pre></td></tr></table></div></figure>


<p>Ketika semua step dianggap sukses sekarang marilah kita hubungkan ke twitter.
sebelum memulai ada baiknya kita membuat <a href="https://apps.twitter.com">aplikasi pada twitter</a> kita.</p>

<p><img class="center" src="http://www.sofianhw.com/images/twitter-hackathon-merdeka.png" width="480" height="480" title="'twitter hackathon merdeka'" ></p>

<p>Kita akan memanfaatkan <a href="https://dev.twitter.com/streaming/overview">API Streaming</a> untuk mendapatkan jumlah tweet secara <em>real-time</em>.</p>

<figure class='code'><figcaption><span>countTweets.py</span><a href='https://github.com/sofianhw/flagpole/blob/master/countTweets.py'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
</pre></td><td class='code'><pre><code class='Python'><span class='line'><span class="kn">import</span> <span class="nn">argparse</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">time</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">wiringx86</span> <span class="kn">import</span> <span class="n">GPIOEdison</span> <span class="k">as</span> <span class="n">GPIO</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">TwitterAPI</span> <span class="kn">import</span> <span class="n">TwitterAPI</span><span class="p">,</span> <span class="n">TwitterOAuth</span><span class="p">,</span> <span class="n">TwitterRestPager</span>
</span><span class='line'><span class="n">gpio</span> <span class="o">=</span> <span class="n">GPIO</span><span class="p">(</span><span class="n">debug</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</span><span class='line'><span class="n">pin1</span> <span class="o">=</span> <span class="mi">3</span>
</span><span class='line'><span class="n">pin2</span> <span class="o">=</span> <span class="mi">4</span>
</span><span class='line'><span class="n">pin3</span> <span class="o">=</span> <span class="mi">5</span>
</span><span class='line'><span class="n">pin4</span> <span class="o">=</span> <span class="mi">6</span>
</span><span class='line'><span class="n">COUNT</span> <span class="o">=</span> <span class="mi">100</span> <span class="c"># search download batch size</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">setup</span><span class="p">():</span>
</span><span class='line'>        <span class="k">print</span> <span class="s">&#39;Setting up pin </span><span class="si">%d</span><span class="s">&#39;</span> <span class="o">%</span> <span class="n">pin1</span>
</span><span class='line'>        <span class="n">gpio</span><span class="o">.</span><span class="n">pinMode</span><span class="p">(</span><span class="n">pin1</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">OUTPUT</span><span class="p">)</span>
</span><span class='line'>        <span class="k">print</span> <span class="s">&#39;Setting up pin </span><span class="si">%d</span><span class="s">&#39;</span> <span class="o">%</span> <span class="n">pin2</span>
</span><span class='line'>        <span class="n">gpio</span><span class="o">.</span><span class="n">pinMode</span><span class="p">(</span><span class="n">pin2</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">OUTPUT</span><span class="p">)</span>
</span><span class='line'>        <span class="k">print</span> <span class="s">&#39;Setting up pin </span><span class="si">%d</span><span class="s">&#39;</span> <span class="o">%</span> <span class="n">pin3</span>
</span><span class='line'>        <span class="n">gpio</span><span class="o">.</span><span class="n">pinMode</span><span class="p">(</span><span class="n">pin3</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">OUTPUT</span><span class="p">)</span>
</span><span class='line'>        <span class="k">print</span> <span class="s">&#39;Setting up pin </span><span class="si">%d</span><span class="s">&#39;</span> <span class="o">%</span> <span class="n">pin4</span>
</span><span class='line'>        <span class="n">gpio</span><span class="o">.</span><span class="n">pinMode</span><span class="p">(</span><span class="n">pin4</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">OUTPUT</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">puter</span><span class="p">():</span>
</span><span class='line'>        <span class="k">print</span> <span class="s">&quot;muter&quot;</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">100</span><span class="p">):</span>
</span><span class='line'>                <span class="k">print</span> <span class="n">i</span>
</span><span class='line'>                <span class="n">gpio</span><span class="o">.</span><span class="n">digitalWrite</span><span class="p">(</span><span class="n">pin4</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">LOW</span><span class="p">)</span>
</span><span class='line'>                <span class="n">gpio</span><span class="o">.</span><span class="n">digitalWrite</span><span class="p">(</span><span class="n">pin2</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">HIGH</span><span class="p">)</span>
</span><span class='line'>                <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mf">0.01</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">gpio</span><span class="o">.</span><span class="n">digitalWrite</span><span class="p">(</span><span class="n">pin1</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">LOW</span><span class="p">)</span>
</span><span class='line'>                <span class="n">gpio</span><span class="o">.</span><span class="n">digitalWrite</span><span class="p">(</span><span class="n">pin3</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">HIGH</span><span class="p">)</span>
</span><span class='line'>                <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mf">0.01</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">gpio</span><span class="o">.</span><span class="n">digitalWrite</span><span class="p">(</span><span class="n">pin2</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">LOW</span><span class="p">)</span>
</span><span class='line'>                <span class="n">gpio</span><span class="o">.</span><span class="n">digitalWrite</span><span class="p">(</span><span class="n">pin4</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">HIGH</span><span class="p">)</span>
</span><span class='line'>                <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mf">0.01</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>                <span class="n">gpio</span><span class="o">.</span><span class="n">digitalWrite</span><span class="p">(</span><span class="n">pin3</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">LOW</span><span class="p">)</span>
</span><span class='line'>                <span class="n">gpio</span><span class="o">.</span><span class="n">digitalWrite</span><span class="p">(</span><span class="n">pin1</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">HIGH</span><span class="p">)</span>
</span><span class='line'>                <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mf">0.01</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">count_old_tweets</span><span class="p">(</span><span class="n">api</span><span class="p">,</span> <span class="n">word_list</span><span class="p">):</span>
</span><span class='line'>        <span class="n">words</span> <span class="o">=</span> <span class="s">&#39; OR &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">word_list</span><span class="p">)</span>
</span><span class='line'>        <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>        <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
</span><span class='line'>                <span class="n">pager</span> <span class="o">=</span> <span class="n">TwitterRestPager</span><span class="p">(</span><span class="n">api</span><span class="p">,</span> <span class="s">&#39;search/tweets&#39;</span><span class="p">,</span> <span class="p">{</span><span class="s">&#39;q&#39;</span><span class="p">:</span><span class="n">words</span><span class="p">,</span> <span class="s">&#39;coun</span>
</span><span class='line'>                <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">pager</span><span class="o">.</span><span class="n">get_iterator</span><span class="p">():</span>
</span><span class='line'>                        <span class="k">if</span> <span class="s">&#39;text&#39;</span> <span class="ow">in</span> <span class="n">item</span><span class="p">:</span>
</span><span class='line'>                                <span class="n">count</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>                                <span class="k">print</span><span class="p">(</span><span class="n">count</span><span class="p">)</span>
</span><span class='line'>                        <span class="k">elif</span> <span class="s">&#39;message&#39;</span> <span class="ow">in</span> <span class="n">item</span><span class="p">:</span>
</span><span class='line'>                                <span class="k">if</span> <span class="n">item</span><span class="p">[</span><span class="s">&#39;code&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="mi">131</span><span class="p">:</span>
</span><span class='line'>                                        <span class="k">continue</span> <span class="c"># ignore internal server error </span>
</span><span class='line'>                                <span class="k">elif</span> <span class="n">item</span><span class="p">[</span><span class="s">&#39;code&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="mi">88</span><span class="p">:</span>
</span><span class='line'>                                        <span class="k">print</span><span class="p">(</span><span class="s">&#39;Suspend search until </span><span class="si">%s</span><span class="s">&#39;</span> <span class="o">%</span> <span class="n">search</span>
</span><span class='line'>                                <span class="k">raise</span> <span class="ne">Exception</span><span class="p">(</span><span class="s">&#39;Message from twitter: </span><span class="si">%s</span><span class="s">&#39;</span> <span class="o">%</span> <span class="n">ite</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">count_new_tweets</span><span class="p">(</span><span class="n">api</span><span class="p">,</span> <span class="n">word_list</span><span class="p">):</span>
</span><span class='line'>        <span class="n">words</span> <span class="o">=</span> <span class="s">&#39;,&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">word_list</span><span class="p">)</span>
</span><span class='line'>        <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>        <span class="n">total_skip</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>        <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
</span><span class='line'>                <span class="n">skip</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>                <span class="k">try</span><span class="p">:</span>
</span><span class='line'>                        <span class="n">r</span> <span class="o">=</span> <span class="n">api</span><span class="o">.</span><span class="n">request</span><span class="p">(</span><span class="s">&#39;statuses/filter&#39;</span><span class="p">,</span> <span class="p">{</span><span class="s">&#39;track&#39;</span><span class="p">:</span><span class="n">words</span><span class="p">})</span>
</span><span class='line'>                        <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
</span><span class='line'>                                <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">r</span><span class="o">.</span><span class="n">get_iterator</span><span class="p">():</span>
</span><span class='line'>                                        <span class="k">if</span> <span class="s">&#39;text&#39;</span> <span class="ow">in</span> <span class="n">item</span><span class="p">:</span>
</span><span class='line'>                                                <span class="n">count</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>                                                <span class="n">puter</span><span class="p">()</span>
</span><span class='line'>                                                <span class="k">print</span><span class="p">(</span><span class="n">count</span> <span class="o">+</span> <span class="n">skip</span> <span class="o">+</span> <span class="n">total_skip</span><span class="p">)</span>
</span><span class='line'>                                        <span class="k">elif</span> <span class="s">&#39;limit&#39;</span> <span class="ow">in</span> <span class="n">item</span><span class="p">:</span>
</span><span class='line'>                                                <span class="n">skip</span> <span class="o">=</span> <span class="n">item</span><span class="p">[</span><span class="s">&#39;limit&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;track&#39;</span>
</span><span class='line'>                                                <span class="c">#print(&#39;\n\n\n*** Skipping %d tw</span>
</span><span class='line'>                                        <span class="k">elif</span> <span class="s">&#39;disconnect&#39;</span> <span class="ow">in</span> <span class="n">item</span><span class="p">:</span>
</span><span class='line'>                                                <span class="k">raise</span> <span class="ne">Exception</span><span class="p">(</span><span class="s">&#39;Disconnect: </span><span class="si">%s</span><span class="s">&#39;</span>
</span><span class='line'>                <span class="k">except</span> <span class="ne">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
</span><span class='line'>                        <span class="k">print</span><span class="p">(</span><span class="s">&#39;*** MUST RECONNECT </span><span class="si">%s</span><span class="s">&#39;</span> <span class="o">%</span> <span class="n">e</span><span class="p">)</span>
</span><span class='line'>                <span class="n">total_skip</span> <span class="o">+=</span> <span class="n">skip</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>        <span class="n">parser</span> <span class="o">=</span> <span class="n">argparse</span><span class="o">.</span><span class="n">ArgumentParser</span><span class="p">(</span><span class="n">description</span><span class="o">=</span><span class="s">&#39;Count occurance of word(s)</span>
</span><span class='line'>        <span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s">&#39;-past&#39;</span><span class="p">,</span> <span class="n">action</span><span class="o">=</span><span class="s">&#39;store_true&#39;</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s">&#39;search historic </span>
</span><span class='line'>        <span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s">&#39;-oauth&#39;</span><span class="p">,</span> <span class="n">metavar</span><span class="o">=</span><span class="s">&#39;FILENAME&#39;</span><span class="p">,</span> <span class="nb">type</span><span class="o">=</span><span class="nb">str</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s">&#39;read O</span>
</span><span class='line'>        <span class="n">parser</span><span class="o">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s">&#39;words&#39;</span><span class="p">,</span> <span class="n">metavar</span><span class="o">=</span><span class="s">&#39;W&#39;</span><span class="p">,</span> <span class="nb">type</span><span class="o">=</span><span class="nb">str</span><span class="p">,</span> <span class="n">nargs</span><span class="o">=</span><span class="s">&#39;+&#39;</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s">&#39;wor</span>
</span><span class='line'>        <span class="n">args</span> <span class="o">=</span> <span class="n">parser</span><span class="o">.</span><span class="n">parse_args</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">oauth</span> <span class="o">=</span> <span class="n">TwitterOAuth</span><span class="o">.</span><span class="n">read_file</span><span class="p">(</span><span class="n">args</span><span class="o">.</span><span class="n">oauth</span><span class="p">)</span>
</span><span class='line'>        <span class="n">api</span> <span class="o">=</span> <span class="n">TwitterAPI</span><span class="p">(</span><span class="n">oauth</span><span class="o">.</span><span class="n">consumer_key</span><span class="p">,</span> <span class="n">oauth</span><span class="o">.</span><span class="n">consumer_secret</span><span class="p">,</span> <span class="n">oauth</span><span class="o">.</span><span class="n">access</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">try</span><span class="p">:</span>
</span><span class='line'>                <span class="n">setup</span><span class="p">()</span>
</span><span class='line'>                <span class="k">if</span> <span class="n">args</span><span class="o">.</span><span class="n">past</span><span class="p">:</span>
</span><span class='line'>                        <span class="n">count_old_tweets</span><span class="p">(</span><span class="n">api</span><span class="p">,</span> <span class="n">args</span><span class="o">.</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>                <span class="k">else</span><span class="p">:</span>
</span><span class='line'>                        <span class="n">count_new_tweets</span><span class="p">(</span><span class="n">api</span><span class="p">,</span> <span class="n">args</span><span class="o">.</span><span class="n">words</span><span class="p">)</span>
</span><span class='line'>        <span class="k">except</span> <span class="ne">KeyboardInterrupt</span><span class="p">:</span>
</span><span class='line'>                <span class="k">print</span><span class="p">(</span><span class="s">&#39;</span><span class="se">\n</span><span class="s">Terminated by user</span><span class="se">\n</span><span class="s">&#39;</span><span class="p">)</span>
</span><span class='line'>                <span class="n">gpio</span><span class="o">.</span><span class="n">digitalWrite</span><span class="p">(</span><span class="n">pin1</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">LOW</span><span class="p">)</span>
</span><span class='line'>                <span class="n">gpio</span><span class="o">.</span><span class="n">digitalWrite</span><span class="p">(</span><span class="n">pin2</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">LOW</span><span class="p">)</span>
</span><span class='line'>                <span class="n">gpio</span><span class="o">.</span><span class="n">digitalWrite</span><span class="p">(</span><span class="n">pin3</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">LOW</span><span class="p">)</span>
</span><span class='line'>                <span class="n">gpio</span><span class="o">.</span><span class="n">digitalWrite</span><span class="p">(</span><span class="n">pin4</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">LOW</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>                <span class="c"># Do a general cleanup. Calling this function is not mandatory. </span>
</span><span class='line'>                <span class="n">gpio</span><span class="o">.</span><span class="n">cleanup</span><span class="p">()</span>
</span><span class='line'>        <span class="k">except</span> <span class="ne">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
</span><span class='line'>                <span class="k">print</span><span class="p">(</span><span class="s">&#39;*** STOPPED </span><span class="si">%s</span><span class="se">\n</span><span class="s">&#39;</span> <span class="o">%</span> <span class="n">e</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>token_key.txt</span><a href='https://github.com/sofianhw/flagpole/blob/master/token_key.txt'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">consumer_key</span><span class="o">=</span>
</span><span class='line'><span class="nv">consumer_secret</span><span class="o">=</span>
</span><span class='line'><span class="nv">access_token_key</span><span class="o">=</span>
</span><span class='line'><span class="nv">access_token_secret</span><span class="o">=</span>
</span></code></pre></td></tr></table></div></figure>


<p>mari kita test apakah kode yang kita buat bekerja.</p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>python countTweets.py -oauth token_key.txt <span class="o">[</span>kata<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Berikut video yang sudah dipercepat, soalnya kemaren butuh 2jam.</p>

<div class="embed-video-container"><iframe src="//www.youtube.com/embed/5ZYtQOPkfqs" allowfullscreen></iframe></div>


<p>Semua source code saya upload ke account github saya <a href="https://github.com/sofianhw/flagpole">sofianhw/flagpole</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Berkenalan Dengan Keyboard DVORAK]]></title>
    <link href="http://www.sofianhw.com/blog/2015/07/26/berkelan-dengan-keyboard-dvorak/"/>
    <updated>2015-07-26T00:29:41+07:00</updated>
    <id>http://www.sofianhw.com/blog/2015/07/26/berkelan-dengan-keyboard-dvorak</id>
    <content type="html"><![CDATA[<p>Tahun 2012 lalu teamku menjuarai kompetisi <a href="http://chip.co.id/news/blackberry/4086/indonesia_juara_blackberry_jam_asia_di_bangkok">Hackathon Blackberry di Indonesia dan Asia 2012</a>. Selain pengalaman hackathon ada hal menarik lainnya yang saya dapatkan, pada waktu itu salah satu mentor kami menggunakan keyboard dengan layout <a href="https://en.wikipedia.org/wiki/Dvorak_Simplified_Keyboard">DVORAK</a>. <a href="https://en.wikipedia.org/wiki/Dvorak_Simplified_Keyboard">DVORAK</a> mengklaim bahwa dirinya merupakan layout keyboard yang efisien sehingga bisa mempercepat dalam mengetik.</p>

<p><img class="center" src="http://www.sofianhw.com/images/united-states-dvorak.png" title="'united states dvorak'" ></p>

<!-- more -->


<p>Sempat mencoba tapi selalu gagal karena cukup sulit untuk mulai mengetik <a href="https://en.wikipedia.org/wiki/Dvorak_Simplified_Keyboard">DVORAK</a> sedangkan secara fisik tetap QWERTY. Mencoba cari yang jual keyboard <a href="https://en.wikipedia.org/wiki/Dvorak_Simplified_Keyboard">DVORAK</a> juga ga dapat-dapat.</p>

<p>Setelah <em>stuck</em> bertahun-tahun, akhirnya minggu lalu ada temen yang bisa merubah layout keyboard macbook pro menjadi <a href="https://en.wikipedia.org/wiki/Dvorak_Simplified_Keyboard">DVORAK</a>.</p>

<p><img class="center" src="http://www.sofianhw.com/images/macbook-pro-dvorak.jpg" title="'macbook pro dvorak'" ></p>

<p>Beberapa hari ini saya memulai berlatih dan membiasakan diri dengan <a href="https://en.wikipedia.org/wiki/Dvorak_Simplified_Keyboard">DVORAK</a>. Blog posting ini juga termasuk dalam bagian latihan saya.</p>

<p>Menurut beberapa penelitian untuk mendapatkan kecepatan mengetik pada layout keyboard sebelumnya memerlukan waktu kurang lebih dua bulan. Jika kalian tertarik untuk belajar menggunakan <a href="https://en.wikipedia.org/wiki/Dvorak_Simplified_Keyboard">DVORAK</a>, berikut ada beberapa <em>website</em> yang mengajarkan untuk melancarkan mengetik menggunakan layout <a href="https://en.wikipedia.org/wiki/Dvorak_Simplified_Keyboard">DVORAK</a>, antara lain :</p>

<ul>
<li><a href="http://learn.dvorak.nl">learn.dvorak.nl</a></li>
<li><a href="http://www.mit.edu/people/jcb/Dvorak/dvorak-course/">mit.edu</a></li>
<li><a href="http://gigliwood.com/abcd/lessons/">gigliwood.com</a></li>
<li><a href="http://typeyourway.com/content/abcd-basic-course-dvorak-us">typeyourway.com</a></li>
</ul>


<p>Hari ini merupakan hari kedua saya menggunakan layout <a href="https://en.wikipedia.org/wiki/Dvorak_Simplified_Keyboard">DVORAK</a>. Hasil tes dari situs <a href="http://10fastfingers.com">10fastfingers.com</a> saya hanya mendapatkan skor 14 kata per menit.</p>

<p><img class="center" src="http://www.sofianhw.com/images/kecepatan-mengetik-dvorak.png" title="'kecepatan mengetik dvorak'" ></p>

<p>Belum cukup memuaskan, tetapi saya yakin dalam waktu dekat saya akan terbiasa dengan <a href="https://en.wikipedia.org/wiki/Dvorak_Simplified_Keyboard">DVORAK</a>.</p>

<p>Bagaimana dengan Anda? Tertarik menggunakan <a href="https://en.wikipedia.org/wiki/Dvorak_Simplified_Keyboard">DVORAK</a>? Punya pengalaman dengan <a href="https://en.wikipedia.org/wiki/Dvorak_Simplified_Keyboard">DVORAK</a>? Atau malah tidak tau keuntungan menggunakan <a href="https://en.wikipedia.org/wiki/Dvorak_Simplified_Keyboard">DVORAK</a>?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pengenalan Bahasa Pemrogramman Golang]]></title>
    <link href="http://www.sofianhw.com/blog/2015/07/12/pengenalan-bahasa-pemrogramman-golang/"/>
    <updated>2015-07-12T14:09:32+07:00</updated>
    <id>http://www.sofianhw.com/blog/2015/07/12/pengenalan-bahasa-pemrogramman-golang</id>
    <content type="html"><![CDATA[<p>Bulan lalu kantor saya kedatangan CTO dari <a href="http://www.go-jek.com">Go-Jek</a> (<a href="https://plus.google.com/+SheranGunasekera">Sheran Gunasekera</a>), beliau sharing tentang beberapa masalah yang dialami oleh <a href="http://www.go-jek.com">Go-Jek</a>, salah satunya yaitu masalah <em>concurrency</em>, untuk menyelesaikan masalah ini mereka berniat migrasi ke <a href="http://golang.org">Go</a>. Karena penasaran saya juga mencoba untuk belajar <a href="http://golang.org">Go</a>.
<img class="center" src="http://www.sofianhw.com/images/CTO-GoJek.jpg" title="'Bersama CTO Go-Jek'" ></p>

<!-- more -->


<p>Inti dari saya menulis blog ini lebih ke memberi pengenalan tentang <a href="http://golang.org">Go</a>, bukan untuk mengajari bagaimana full tentang <a href="http://golang.org">Go</a>. Karena saya bukan orang yang menggunakan <a href="http://golang.org">Go</a> dalam keseharian. Tapi saya harap kedepannya dapat merubah beberapa <em>webservice</em> kami ke <a href="http://golang.org">Go</a>. Kenapa saya tertarik untuk migrasi ke <a href="http://golang.org">Go</a>, mari kita lihat sejarah dari <a href="http://golang.org">Go</a> sendiri.</p>

<p><a href="http://golang.org">Go</a> dibuat oleh <a href="https://en.wikipedia.org/wiki/Robert_Griesemer">Robert Griesemer</a>, <a href="https://en.wikipedia.org/wiki/Rob_Pike">Rob Pike</a> dan <a href="https://en.wikipedia.org/wiki/Ken_Thompson_">Ken Thompson</a> pada tahun 2007, dan mulai dipublish tahun 2009. Idenya sendiri lahir dari kebutuhan untuk membuat suatu bahasa pemrogramman yang <em>type safety</em> dan <em>portability</em>. Dan beberapa tujuan lainnya :</p>

<ul>
<li>Gampang dipelajari</li>
<li>Type Safety dan Memory Safety</li>
<li>Gampang untuk Concurrency</li>
<li>Adanya Garbage Collection</li>
<li>Kompilasi yang cepat</li>
</ul>


<p>Beberapa perusahaan besar yang telah menggunakan <a href="http://golang.org">Go</a> antara lain :</p>

<ul>
<li><a href="http://www.canonical.com/">Canonical</a></li>
<li><a href="http://www.heroku.com/">Heroku</a></li>
<li><a href="http://www.cloudfoundry.com/">CloudFoundry</a></li>
<li><a href="http://www.cloudflare.com/">CloudFlare</a></li>
<li><a href="https://www.google.co.id">Google</a></li>
<li><a href="http://go-lang.cat-v.org/organizations-using-go">Etc.</a></li>
</ul>


<p>Untuk IDE sendiri beberapa IDE yang lazim digunakan oleh para developer telah mendukung <a href="http://golang.org">Go</a>, seperti :</p>

<ul>
<li><a href="http://www.sublimetext.com/">Sublime Text</a></li>
<li><a href="http://www.jetbrains.com/idea/">IntelliJ</a></li>
<li><a href="https://github.com/visualfc/liteide">LiteIDE</a></li>
<li><a href="http://netbeans.org/">NetBeans</a></li>
<li><a href="http://www.eclipse.org/">Eclipse</a></li>
<li><a href="http://macromates.com/">TextMate</a></li>
<li><a href="http://komodoide.com/resources/languages/komodo--golang/">Komodo</a></li>
<li><a href="https://github.com/golang/go/wiki/IDEsAndTextEditorPlugins">Etc.</a></li>
</ul>


<p>Keseharian saya menggunakan beberapa <em>dynamic language</em> seperti <a href="http://blog.sofianhw.com/blog/2015/06/29/pengenalan-bahasa-pemrogramman-python/">Python</a> dan Nodejs, ketika saya mencoba syntax <a href="http://golang.org">Go</a> cukup mudah untuk saya beradaptasi, namun walaupun demikian <a href="http://golang.org">Go</a> memiliki performa yang setara dengan C. Mari kita perhatikan beberapa hal yang membedakan <a href="http://golang.org">Go</a> dengan bahasa pemrogramman lainnya.</p>

<h2>Syntax</h2>

<p><a href="http://golang.org">Go</a> tidak mengharuskan untuk menambahkan titik koma(;) pada setiap akhir dari baris kode. Untuk deklarasi sendiri ada beberapa cara diantaranya :</p>

<ul>
<li>nama variable diikuti oleh tipe datanya ex : var kata string</li>
<li>variable juga bisa langsung diinisialisasi ex : angka := 10</li>
</ul>


<p>Masih ingat ketika kita mengakses sebuah object biasanya ada property Public/Private, dimana yang memiliki proverty Private hanya bisa diakses oleh si object itu sendiri. Nah di <a href="http://golang.org">Go</a> sendiri yang membedakan Public dan Private adalah awal kata dari nama variable atau function tersebut. Ketika awal katanya merupakan huruf besar maka secara otomatis akan menjadi Public variable atau function. Sebaliknya untuk private cukup menggunakan awal katanya ke huruf kecil.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='Go'><span class='line'><span class="kd">func</span> <span class="nx">Foo</span><span class="p">()</span> <span class="c1">// Public function</span>
</span><span class='line'><span class="kd">func</span> <span class="nx">bar</span><span class="p">()</span> <span class="c1">// Private function</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://golang.org">Go</a> merupakan bahasa pemrogramman <em>procedural</em>, dimana <a href="http://golang.org">Go</a> tidak mempunyai feature class, overloading, dan inheritance.</p>

<h2>Warning / Error</h2>

<p><a href="http://golang.org">Go</a> juga mempunya karakteristik yang unik tentang Error. Jika ada variable atau package yang tidak terpakai maka akan ada peringatan Error.</p>

<h2>Control Structure</h2>

<p>Hal yang menarik dari Go hanya memiliki 3 <em>Control Structure</em> :</p>

<ul>
<li>If Else</li>
<li>Switch Case</li>
<li>For</li>
</ul>


<p>Untuk penulisan sendiri ada beberapa berbedaan seperti pada <strong>If Else</strong> kita bisa menginisialisasi variable pada kondisional statemen</p>

<figure class='code'><figcaption><span>ifelse.go</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='Go'><span class='line'><span class="k">if</span> <span class="nx">value</span><span class="p">,</span> <span class="nx">ok</span> <span class="o">:=</span> <span class="nx">readData</span><span class="p">();</span> <span class="nx">kondisional</span> <span class="p">{</span>
</span><span class='line'>  <span class="o">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Begitu pula untuk <strong>Switch Case</strong>, pada <a href="http://golang.org">Go</a> lebih fleksibel. Karena kita harus menentukan variable apa yang akan menjadi acuan <strong>Case</strong>.</p>

<figure class='code'><figcaption><span>switch.go</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='Go'><span class='line'><span class="k">switch</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">case</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="mi">0</span><span class="p">:</span>
</span><span class='line'>      <span class="nx">f1</span><span class="p">()</span>
</span><span class='line'>  <span class="k">case</span> <span class="nx">i</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
</span><span class='line'>      <span class="nx">f2</span><span class="p">()</span>
</span><span class='line'>  <span class="k">case</span> <span class="nx">i</span> <span class="p">&gt;</span> <span class="mi">0</span><span class="p">:</span>
</span><span class='line'>      <span class="nx">f3</span><span class="p">()</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Selain itu <strong>Switch Case</strong> pada <a href="http://golang.org">Go</a> juga tidak mempunyai <strong>break</strong>. jika kita mau mengindikasikan dari satu <strong>Case</strong> satu mau lanjut ke <strong>Case</strong> selanjutnya kita perlu menambahkan Kode <strong>fallthrough</strong></p>

<figure class='code'><figcaption><span>switch2.go</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='Go'><span class='line'><span class="k">switch</span> <span class="nx">i</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">case</span> <span class="mi">0</span><span class="p">:</span> <span class="c1">// tidak akan ada yang akan dieksekusi ketika i == 0</span>
</span><span class='line'>  <span class="k">case</span> <span class="mi">1</span><span class="p">:</span>
</span><span class='line'>          <span class="nx">f</span><span class="p">()</span> <span class="c1">// function f() tidak akan dipanggil ketika i == 0</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// untuk membuat function f dipanggil kita perlu menambahkan failthrough pada case 1</span>
</span><span class='line'><span class="k">switch</span> <span class="nx">i</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">case</span> <span class="mi">0</span><span class="p">:</span> <span class="nx">failthrough</span>
</span><span class='line'>  <span class="k">case</span> <span class="mi">1</span><span class="p">:</span>
</span><span class='line'>          <span class="nx">f</span><span class="p">()</span> <span class="c1">// dengan demikian function f() akan dipanggil ketika i == 0</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Dan yang paling menarik untuk metode pengulangan <a href="http://golang.org">Go</a> hanya memiliki satu control structure yaitu <strong>For</strong>, untuk membuat infinte loop kita bisa menuliskan sebagai berikut</p>

<figure class='code'><figcaption><span>for.go</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='Go'><span class='line'><span class="k">for</span><span class="p">{</span>
</span><span class='line'>  
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Tipe Data</h2>

<p>Berikut tipe data yang ada pada <a href="http://golang.org">Go</a> :</p>

<ul>
<li><strong>Boolean</strong> : bool</li>
<li><strong>Numeric</strong> : uint8 to uint64, int8 to int64, uint, int, float32, float64,complex64, complex128, byte, rune</li>
<li><strong>String</strong> : string</li>
<li><strong>Array</strong> : [5]byte</li>
<li><strong>Slice</strong> : make([]int, 50, 100)</li>
<li><strong>Map</strong> : map[string]int</li>
<li><strong>Struct</strong> : struct</li>
<li><strong>Function</strong> : func</li>
<li><strong>Interface</strong> : interface</li>
<li><strong>Channel</strong> : chan</li>
</ul>


<p>Kurang lebih sama seperti bahasa lainnya, namun ada beberapa perbedaan yang akan kita bahas.</p>

<h3>Array</h3>

<p>Array merupakan tipe data yang dapat menampung data dengan tipe data yang sama. Pada <a href="http://golang.org">Go</a> Array memiliki kapasitas yang tetap dimana kita tidak bisa menambahkan data melebihi kapasitas dari array tersebut. Mirip dengan tuple pada <a href="http://blog.sofianhw.com/blog/2015/06/29/pengenalan-bahasa-pemrogramman-python/">Python</a>.</p>

<figure class='code'><figcaption><span>array.go</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='Go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">arr1</span> <span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="kt">int</span>
</span><span class='line'>    <span class="k">for</span> <span class="nx">i</span><span class="o">:=</span><span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="nx">arr1</span><span class="p">);</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">arr1</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="p">=</span> <span class="nx">i</span> <span class="o">*</span> <span class="mi">2</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">for</span> <span class="nx">i</span><span class="o">:=</span><span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="nx">arr1</span><span class="p">);</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Array at index %d is %d\n&quot;</span><span class="p">,</span> <span class="nx">i</span><span class="p">,</span> <span class="nx">arr1</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>Output</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Array at index <span class="m">0</span> is <span class="m">0</span>
</span><span class='line'>Array at index <span class="m">1</span> is <span class="m">2</span>
</span><span class='line'>Array at index <span class="m">2</span> is <span class="m">4</span>
</span><span class='line'>Array at index <span class="m">3</span> is <span class="m">6</span>
</span><span class='line'>Array at index <span class="m">4</span> is 8
</span></code></pre></td></tr></table></div></figure>


<h3>Slice</h3>

<p>Bisa dibilang Slice merupakan Array yang fleksibel, maksudnya adalah kapasitas dari Slice bisa berubah, baik bertambah ataupun berkurang. Jika Anda programmer <a href="http://blog.sofianhw.com/blog/2015/06/29/pengenalan-bahasa-pemrogramman-python/">Python</a>, maka Slice ini mirip dengan list pada <a href="http://blog.sofianhw.com/blog/2015/06/29/pengenalan-bahasa-pemrogramman-python/">Python</a>.</p>

<figure class='code'><figcaption><span>slice.go</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='Go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">slice1</span> <span class="p">[]</span><span class="kt">int</span> <span class="p">=</span> <span class="nb">make</span><span class="p">([]</span><span class="kt">int</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// load the array/slice:</span>
</span><span class='line'><span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="nx">slice1</span><span class="p">);</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">slice1</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="p">=</span> <span class="mi">5</span> <span class="o">*</span> <span class="nx">i</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// print the slice:</span>
</span><span class='line'><span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="nx">slice1</span><span class="p">);</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Slice at %d is %d\n&quot;</span><span class="p">,</span> <span class="nx">i</span><span class="p">,</span> <span class="nx">slice1</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;\nThe length of slice1 is %d\n&quot;</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="nx">slice1</span><span class="p">))</span>
</span><span class='line'><span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;The capacity of slice1 is %d\n&quot;</span><span class="p">,</span> <span class="nb">cap</span><span class="p">(</span><span class="nx">slice1</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span>Output</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Slice at <span class="m">0</span> is <span class="m">0</span>
</span><span class='line'>Slice at <span class="m">1</span> is 5
</span><span class='line'>Slice at <span class="m">2</span> is 10
</span><span class='line'>Slice at <span class="m">3</span> is 15
</span><span class='line'>Slice at <span class="m">4</span> is 20
</span><span class='line'>Slice at <span class="m">5</span> is 25
</span><span class='line'>Slice at <span class="m">6</span> is 30
</span><span class='line'>Slice at <span class="m">7</span> is 35
</span><span class='line'>Slice at <span class="m">8</span> is 40
</span><span class='line'>Slice at <span class="m">9</span> is 45
</span><span class='line'>The length of slice1 is 10
</span></code></pre></td></tr></table></div></figure>


<h3>Map</h3>

<p>Map juga merupakan Array, jika pada Array dan Slice untuk mengakses menggunakan index, pada Map Anda dapat menggunakan <em>key</em>, atau sering disebut juga <em>hash</em>. Pada <a href="http://blog.sofianhw.com/blog/2015/06/29/pengenalan-bahasa-pemrogramman-python/">Python</a> Map dikenal sebagai Dictionary.</p>

<figure class='code'><figcaption><span>map.go</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='Go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">mapLit</span> <span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kt">int</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">mapAssigned</span> <span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kt">int</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">mapLit</span> <span class="p">=</span> <span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kt">int</span><span class="p">{</span><span class="s">&quot;one&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s">&quot;two&quot;</span><span class="p">:</span> <span class="mi">2</span><span class="p">}</span>
</span><span class='line'>  <span class="nx">mapCreated</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">map</span><span class="p">[</span><span class="kt">string</span><span class="p">]</span><span class="kt">float32</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">mapAssigned</span> <span class="p">=</span> <span class="nx">mapLit</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nx">mapCreated</span><span class="p">[</span><span class="s">&quot;key1&quot;</span><span class="p">]</span> <span class="p">=</span> <span class="mf">4.5</span>
</span><span class='line'>  <span class="nx">mapCreated</span><span class="p">[</span><span class="s">&quot;key2&quot;</span><span class="p">]</span> <span class="p">=</span> <span class="mf">3.14159</span>
</span><span class='line'>  <span class="nx">mapAssigned</span><span class="p">[</span><span class="s">&quot;two&quot;</span><span class="p">]</span> <span class="p">=</span> <span class="mi">3</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Map literal at one is: %d\n&quot;</span><span class="p">,</span> <span class="nx">mapLit</span><span class="p">[</span><span class="s">&quot;one&quot;</span><span class="p">])</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Map created at key2 is: %f\n&quot;</span><span class="p">,</span> <span class="nx">mapCreated</span><span class="p">[</span><span class="s">&quot;key2&quot;</span><span class="p">])</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Map assigned at two is: %d\n&quot;</span><span class="p">,</span> <span class="nx">mapLit</span><span class="p">[</span><span class="s">&quot;two&quot;</span><span class="p">])</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Map literal at ten is: %d\n&quot;</span> <span class="nx">mapLit</span><span class="p">[</span><span class="s">&quot;ten&quot;</span><span class="p">])</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span>Output</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Map literal at one is: 1
</span><span class='line'>Map created at key2 is: 3.141590
</span><span class='line'>Map assigned at two is: <span class="m">3</span>
</span><span class='line'>Map literal at ten is: 0
</span></code></pre></td></tr></table></div></figure>


<h3>Struct</h3>

<p>Jika Array merupakan kumpulan data dengan tipe data yang sama, Struct adalah kumpulan data dengan tipe data yang berbeda sesuai dengan apa yang kita <em>define</em> diawal. Hal ini sangat mirip dengan konsepnya Struct pada Bahasa C.</p>

<figure class='code'><figcaption><span>konsep</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='Go'><span class='line'><span class="kd">type</span> <span class="nx">identifier</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">field1</span> <span class="nx">type1</span>
</span><span class='line'>  <span class="nx">field2</span> <span class="nx">type2</span>
</span><span class='line'>  <span class="o">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span>struct.go</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='Go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">struct1</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">i1</span>   <span class="kt">int</span>
</span><span class='line'>  <span class="nx">f1</span>   <span class="kt">float32</span>
</span><span class='line'>  <span class="nx">str</span>  <span class="kt">string</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">ms</span> <span class="o">:=</span> <span class="nb">new</span><span class="p">(</span><span class="nx">struct1</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">ms</span><span class="p">.</span><span class="nx">i1</span> <span class="p">=</span> <span class="mi">10</span>
</span><span class='line'>  <span class="nx">ms</span><span class="p">.</span><span class="nx">f1</span> <span class="p">=</span> <span class="mf">15.5</span>
</span><span class='line'>  <span class="nx">ms</span><span class="p">.</span><span class="nx">str</span> <span class="p">=</span> <span class="s">&quot;Chris&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;The int is: %d\n&quot;</span><span class="p">,</span> <span class="nx">ms</span><span class="p">.</span><span class="nx">i1</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;The float is: %f\n&quot;</span><span class="p">,</span> <span class="nx">ms</span><span class="p">.</span><span class="nx">f1</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;The string is: %s\n&quot;</span><span class="p">,</span> <span class="nx">ms</span><span class="p">.</span><span class="nx">str</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">ms</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span>Output</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>The int is: 10
</span><span class='line'>The float is: 15.500000
</span><span class='line'>The string is: Chris
</span><span class='line'><span class="p">&amp;</span><span class="o">{</span><span class="m">10</span> 15.5 Chris<span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Function</h3>

<p>Function merupakan kumpulan dari tipe data, control dan statement. Yang mana bisa mengembalikan value, tidak seperti bahasa pemrogramman pada umumnya, pada <a href="http://golang.org">Go</a> <em>return value</em> nya bisa lebih dari satu.</p>

<figure class='code'><figcaption><span>function.go</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='Go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">(){</span>
</span><span class='line'>  <span class="nx">nilai</span> <span class="o">:=</span> <span class="p">[]</span><span class="kt">int</span><span class="p">{</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">,</span><span class="mi">9</span><span class="p">}</span>
</span><span class='line'>  <span class="nx">nama</span> <span class="o">:=</span> <span class="s">&quot;sofian hadiwijaya&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">nilairatarata</span><span class="p">,</span> <span class="nx">namanya</span> <span class="o">:=</span> <span class="nx">HitungAvg</span><span class="p">(</span><span class="nx">nilai</span><span class="p">,</span> <span class="nx">nama</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Nama Siswa: %s\n&quot;</span><span class="p">,</span> <span class="nx">namanya</span><span class="p">)</span>    
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Nilai Rata-Rata: %f\n&quot;</span><span class="p">,</span> <span class="nx">nilairatarata</span><span class="p">)</span> 
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">HitungAvg</span><span class="p">(</span><span class="nx">nilai</span> <span class="p">[]</span><span class="kt">int</span><span class="p">,</span> <span class="nx">nama</span> <span class="kt">string</span><span class="p">)</span> <span class="p">(</span><span class="kt">float32</span><span class="p">,</span> <span class="kt">string</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">total</span> <span class="kt">int</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">i</span><span class="o">:=</span><span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="nx">nilai</span><span class="p">);</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">total</span> <span class="o">+=</span> <span class="nx">nilai</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="nb">float32</span><span class="p">(</span><span class="nx">total</span><span class="p">)</span><span class="o">/</span><span class="nb">float32</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="nx">nilai</span><span class="p">)),</span> <span class="nx">nama</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span>Output</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Nama Siswa: sofian hadiwijaya
</span><span class='line'>Nilai Rata-Rata: 8.250000
</span></code></pre></td></tr></table></div></figure>


<h3>Interface</h3>

<p><a href="http://golang.org">Go</a> bukan bahasa berorientasi objek &lsquo;klasik&rsquo;. Dimana <a href="http://golang.org">Go</a> tidak mempunyai <em>class</em> dan metode <em>inheritance</em>. Interface sendiri lebih ke seperti <em>Abstract Class</em> dimana hanya berupa kumpulan metode/function.</p>

<figure class='code'><figcaption><span>konsep</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='Go'><span class='line'><span class="kd">type</span> <span class="nx">Namer</span> <span class="kd">interface</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">Method1</span><span class="p">(</span><span class="nx">param_list</span><span class="p">)</span> <span class="nx">return_type</span>
</span><span class='line'>  <span class="nx">Method2</span><span class="p">(</span><span class="nx">param_list</span><span class="p">)</span> <span class="nx">return_type</span>
</span><span class='line'>  <span class="o">...</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span>interface.go</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='Go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">Shaper</span> <span class="kd">interface</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">Area</span><span class="p">()</span> <span class="kt">float32</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">type</span> <span class="nx">Square</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">side</span> <span class="kt">float32</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="p">(</span><span class="nx">sq</span> <span class="o">*</span><span class="nx">Square</span><span class="p">)</span> <span class="nx">Area</span><span class="p">()</span> <span class="kt">float32</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">sq</span><span class="p">.</span><span class="nx">side</span> <span class="o">*</span> <span class="nx">sq</span><span class="p">.</span><span class="nx">side</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">(){</span>
</span><span class='line'>  <span class="nx">sq1</span> <span class="o">:=</span> <span class="nb">new</span><span class="p">(</span><span class="nx">Square</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">sq1</span><span class="p">.</span><span class="nx">side</span> <span class="p">=</span> <span class="mi">5</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">areaIntf</span> <span class="o">:=</span> <span class="nx">sq1</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;Luas Area = %f\n&quot;</span><span class="p">,</span> <span class="nx">areaIntf</span><span class="p">.</span><span class="nx">Area</span><span class="p">())</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span>Output</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Luas <span class="nv">Area</span> <span class="o">=</span> 25.000000
</span></code></pre></td></tr></table></div></figure>


<h3>Goroutines And Channel</h3>

<p>Goroutines merupakan <em>thread</em> pada bahasa pemrogramman lainnya.</p>

<blockquote><p>Do not use global variables or shared memory, they make your code unsafe for running concurrently</p></blockquote>

<p>Channel sendiri merupakan alat komunikasi antara goroutines</p>

<figure class='code'><figcaption><span>goroutine.go</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='Go'><span class='line'><span class="kn">package</span> <span class="nx">main</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="s">&quot;fmt&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">sum</span><span class="p">(</span><span class="nx">a</span> <span class="p">[]</span><span class="kt">int</span><span class="p">,</span> <span class="nx">c</span> <span class="kd">chan</span> <span class="kt">int</span><span class="p">){</span>
</span><span class='line'>  <span class="nx">sum</span> <span class="o">:=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="k">for</span> <span class="nx">_</span><span class="p">,</span> <span class="nx">v</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">a</span><span class="p">{</span>
</span><span class='line'>      <span class="nx">sum</span> <span class="o">+=</span> <span class="nx">v</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">c</span> <span class="o">&lt;-</span> <span class="nx">sum</span> <span class="c1">// send sum to c</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">func</span> <span class="nx">main</span><span class="p">(){</span>
</span><span class='line'>  <span class="nx">a</span> <span class="o">:=</span> <span class="p">[]</span><span class="kt">int</span><span class="p">{</span><span class="mi">7</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="o">-</span><span class="mi">9</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">0</span><span class="p">}</span>
</span><span class='line'>  <span class="nx">c</span> <span class="o">:=</span> <span class="nb">make</span><span class="p">(</span><span class="kd">chan</span> <span class="kt">int</span><span class="p">)</span>
</span><span class='line'>  <span class="k">go</span> <span class="nx">sum</span><span class="p">(</span><span class="nx">a</span><span class="p">[:</span><span class="nb">len</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">],</span><span class="nx">c</span><span class="p">)</span>
</span><span class='line'>  <span class="k">go</span> <span class="nx">sum</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nb">len</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">:],</span><span class="nx">c</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">x</span><span class="p">,</span><span class="nx">y</span> <span class="o">:=</span> <span class="o">&lt;-</span><span class="nx">c</span> <span class="p">,</span> <span class="o">&lt;-</span><span class="nx">c</span> <span class="c1">// receive from c</span>
</span><span class='line'>  <span class="nx">fmt</span><span class="p">.</span><span class="nx">Println</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">x</span><span class="o">+</span><span class="nx">y</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span>Output</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="m">17</span> -5 12
</span></code></pre></td></tr></table></div></figure>


<p>Selamat mencoba, jika Anda ingin belajar lebih lanjut dapat langsung mengunjungi situs dokumentasi dari <a href="http://golang.org/doc/">Go</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Interview Tentang Internet of Things via Email]]></title>
    <link href="http://www.sofianhw.com/blog/2015/07/05/interview-tentang-internet-of-things-via-email/"/>
    <updated>2015-07-05T01:48:40+07:00</updated>
    <id>http://www.sofianhw.com/blog/2015/07/05/interview-tentang-internet-of-things-via-email</id>
    <content type="html"><![CDATA[<h2>1. Apa sih yang dimaksud dengan Internet of Things?</h2>

<p>Sebuah konsep dimana benda/objek dengan bantuan perangkat elektronik, perngkat lunak, sensor, dan konektivitas/internet yang membuat benda tersebut dapat bertukaran data / informasi, yang menyebabkan benda tersebut bisa saling berinteraksi dan lebih pintar.</p>

<!--more-->


<h2>2. Apa saja yang termasuk dalam Internet of Things?</h2>

<p>Benda apa saja yang memiliki kemampuan berinteraksi via internet. Contoh yang sudah lama ada ditengah kita yaitu mesin ATM. Mesin ATM bisa berinteraksi dengan mesin server melalui internet, dan untuk menarik uang / menabung uang terdapat sensor yang bisa membedakan besaran uang tersebut.</p>

<h2>3. Apa saja manfaat yang bisa kita dapatkan dengan Internet of Things?</h2>

<p>Sisi baiknya adalah kita semakin dimanja dengan teknologi ini, dimana kita bisa berinteraksi dengan benda-benda milik kita dimanapun kita berada kita bisa mengkontrol benda tersebut. Contohnya sekarang banyak yang mengembangkan <em>smartcity</em>, kebayangkan ketika kota yang kita tinggali bisa berinteraksi dengan kita dimanapun kita berada. kita bisa tau jalan yang macet, efisiensi penggunakan energi lampu jalan. serta kita bisa mendapakan prediksi cuaca dan prediksi perjalan kita.
Salah satu teman saya mengembangkan teknologi <strong>IoT</strong> untuk membantu pembudidaya ikan. mereka membuat sebuah startup bernama <a href="http://www.efishery.com">efishery</a>. dimana mereka membuat sebuah tempat pakan ikan yang smart. dengan bantuan alat ini para petani budidaya ikan bisa menghemat pemberian pakan  kepada ikan. karena dengan sensor yang ada pada alat ini, memungkinkan untuk mengetahui apakah semua ikan sudah mendapatkan makanan. ketika semuanya efisien akan berakibat pada kondisi kolam yang lebih sehat, karena tidak ada pakan yang terbuang. Bahkan ketika pakan habis pun, alat tersebut bisa berinteraksi dengan mengirimkan notifikasi pada pemilik kolam.</p>

<h2>4. Di Indonesia sendiri, siapa yang mempopulerkan Internet of Things?</h2>

<p>Di Indonesia sendiri kita mempunya beberapa startup yang fokus dibidang <strong>IoT</strong>, kebetulan perusahaan saya <a href="http://crazyhackerz.com">Crazyhackerz</a> juga sedang mengembangkan beberapa perangkat berbasiskan <strong>IoT</strong>. Kita membidik sektor hiburan. Diantaranya kita mempunyai <a href="http://crazyhackerz.com/instaprint_by_crackerz">Instaprint</a> dan <a href="http://crazyhackerz.com/instabelly">Instabelly</a>, dimana kedua alat ini memanfaatkan API <a href="https://instagram.com">Instagram</a> untuk berinteraksi.
Startup lainnya seperti yang sudah saya sebutkan sebelumnya yaitu <a href="http://www.efishery.com">efishery</a>. Selain pada solusi ada juga startup yang menyediakan layanan <em>platform</em> <strong>IoT</strong> seperti <a href="http://www.geeknesia.com">Geeknesia</a>. Dengan adanya <em>platform</em> dari <a href="http://www.geeknesia.com">Geeknesia</a> ini akan mempermudah para pengembang <strong>IoT</strong> untuk fokus pada aplikasi/device mereka, tidak perlu pusing dengan complexnya membangun server sebagai tempat pertukaran data untuk para perangkat <strong>IoT</strong>.</p>

<h2>5. Anda  memanfaatkan Internet of Things untuk apa saja, menggunakan perangkat/ gadget apa, dan sudah berapa lama menggunakannya?</h2>

<p>Karena saya orangnya agak males, saya mencoba membuat kamar saya lebih <em>smart</em>. Dimana saya bisa mengkontrol lampu dan AC dari internet. jadi ketika saya pulang saya ingin kamar sudah nyala dan dalam keadaan dingin. dan ketika ingin tidur saya bisa mematikan lampu tanpa harus beranjak dari tempat tidur.</p>

<h2>6. Saat ini sudah beberapa kali acara meeting Komunitas <strong>IoT</strong> diadakan. Siapa yang mencetuskan acara ini, tujuannya untuk apa, dan siapa saja yang ikut serta?</h2>

<p>Komunitas <strong>IoT</strong> yang sangat konsisten berada di Bandung. kebetulan jum'at ini sudah memasuki pertemuan yang ke 13.
<a href="http://meetup.com/Bandung-Internet-of-Things-Meetup/">Bandung <strong>IoT</strong> Meetup</a>.
yang mengkoordinasi meetup ini Martin Kurniadi founder dari <a href="http://www.geeknesia.com">Geeknesia</a>. Meetup ini dia bentuk setelah mengikuti hackathon <strong>IoT</strong> yang kita adakan maret lalu, yang ikut acaranya ini <em>hobbyist</em>( komunitas arduino, raspberry pi) dan mahasiswa serta para pengembang bisnis yang terkait ( developer bangunan, telco, intel, ibm, dll ).</p>

<h2>7. Bisa dijelaskan sedikit mengenai Komunitas <strong>IoT</strong>? (Berdiri sejak kapan, kegiatan apa saja yang biasa diadakan, topik apa saja yang dibahas anggotanya sudah berapa banyak, dan berasal dari kalangan mana saja)</h2>

<p>Berdiri sejak Maret 2015, kegiatan kita biasa sharing teknologi baru, dan kita juga mengadakan workshop. jumlah peserta yang biasa hadir berkisar 50-60 orang.</p>

<h2>8. Kegiatan terakhir Komunitas <strong>IoT</strong> menyorot topik apa? Kapan kegiatan selanjutnya akan diadakan, dan topik apa yang akan dibahas?</h2>

<p>terakhir kita mengenalkan teknologi dari Intel, mereka punya beberapa board yang berhubungan dengan <strong>IoT</strong> ( intel galileo / intel edison ). dan juga kita mengundang beberapa startup <strong>IoT</strong> yang sudah me launching produk mereka ( efishery dan cubeacon ). next event tanggal 3 juli 2015. Akan membahas tentang <em>hype cycle</em> <strong>IoT</strong> dan raspberry pi.</p>

<h2>9. Bagaimana caranya jika ada yang ingin bergabung dengan Komunitas <strong>IoT</strong>. Apakah ada syarat tertentu? Seperti apa sistem keanggotaannya? Apakah ada kontak yang boleh dipublikasikan (misalnya email) bagi mereka yang ingin bergabung?</h2>

<p>Komunitasnya bersifat terbuka, siapa saja bisa bergabung kita, dapat mengunjungi sitenya <a href="http://meetup.com/Bandung-Internet-of-Things-Meetup/">Bandung <strong>IoT</strong> Meetup</a>.</p>

<h2>10. Terakhir, apa prediksi atau pandangan Anda terhadap <strong>IoT</strong> di Indonesia dalam beberapa tahun ke depan?</h2>

<p>Pangsa pasar untuk <strong>IoT</strong> masih sangat luas di indonesia. Dan atusias para pengembang juga sangat bagus. Kemungkinan demam startup di software / aplikasi juga akan terjadi di <strong>IoT</strong>. Seperti kita liat di crowdfunding <em>platform</em> banyak sekali benda-benda pintar yang sudah sukses disana. di indonesia pun kita punya beberapa crowdfunding yang akan mendukung para pengembang <strong>IoT</strong> ( <a href="https://kitabisa.com">Kitabisa</a>, <a href="http://wujudkan.com">wujudkan</a>, <a href="http://idesabi.com">idesabi</a>). Di dukung pula dengan maker movement di indonesia yang sangat bagus perkembangannya. Dan <a href="http://www.ge.com/id/">GE ( <em>General Electric</em> )</a> agustus nanti akan membuka GE Garage, dimana akan tersedia tools lengkap untuk para maker. Selain itu juga sudah banyak <strong>IoT</strong> hackathon yang mulai diadakan oleh beberapa organiasi di Indonesia, <a href="http://compfest.web.id/competition/internet-of-things-competition">Comfest UI</a> juga tahun ini memasukan <strong>IoT</strong> sebagai salah satu kompetisi mereka.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Menghubungkan Intel Edison Ke Geeknesia via MQTT Python-Paho]]></title>
    <link href="http://www.sofianhw.com/blog/2015/07/03/menghubungkan-intel-edison-ke-geeknesia-via-mqtt-python-paho/"/>
    <updated>2015-07-03T16:58:55+07:00</updated>
    <id>http://www.sofianhw.com/blog/2015/07/03/menghubungkan-intel-edison-ke-geeknesia-via-mqtt-python-paho</id>
    <content type="html"><![CDATA[<p>Hello Good People,</p>

<p>Pada postingan sebelumnya kita sudah membahas cara menghubungkan <a href="http://blog.sofianhw.com/blog/2015/06/13/iot-pada-intel-galileo-menggunakan-platform-dari-geeknesia-dot-com/">Intel Galileo ke Geeknesia dengan menggunakan nodejs</a>. Kemudian minggu lalu saya juga menulis tentang <a href="http://blog.sofianhw.com/blog/2015/06/29/pengenalan-bahasa-pemrogramman-python/">dasar-dasar Python</a>. Nah gimana menurut kalian bahasa Python sendiri?.</p>

<!-- more -->


<p>Sekarang kita akan mempelajari bagaimana menghubungkan Intel Edison <em>board</em> penerus dari Intel Galileo, bentuknya lebih kecil dan sudah dilengkapi dengan wifi dan bluetooth.</p>

<p>Sebelum kita menghubungkan Intel Edison ke geeknesia, kita akan mempelajari terlebih dahulu bagaimana cara mengkontrol GPIO dari Arduino <em>breakout</em> yang dibuat khusus untuk Intel Edison. Untuk mengkontrol GPIO pada Intel <em>Board</em> telah tersedia <em>module opensource</em> yaitu <a href="https://pypi.python.org/pypi/Wiring-x86/1.0.0">Wiring-x86</a>.</p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>pip install wiring-x86
</span></code></pre></td></tr></table></div></figure>


<p>Mari kita tes untuk membuat blinky LED.</p>

<figure class='code'><figcaption><span>blink.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='Python'><span class='line'><span class="c"># Import the time module enable sleeps between turning the led on and off.</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">time</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Import the GPIOEdison class from the wiringx86 module.</span>
</span><span class='line'><span class="c"># In case you want to use a different board, simply the import right class</span>
</span><span class='line'><span class="c"># below. The API is unified for all supported boards.</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">wiringx86</span> <span class="kn">import</span> <span class="n">GPIOEdison</span> <span class="k">as</span> <span class="n">GPIO</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Create a new instance of the GPIOEdison class.</span>
</span><span class='line'><span class="c"># Setting debug=True gives information about the interaction with sysfs.</span>
</span><span class='line'><span class="n">gpio</span> <span class="o">=</span> <span class="n">GPIO</span><span class="p">(</span><span class="n">debug</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</span><span class='line'><span class="n">pin</span> <span class="o">=</span> <span class="mi">7</span>
</span><span class='line'><span class="n">state</span> <span class="o">=</span> <span class="n">gpio</span><span class="o">.</span><span class="n">HIGH</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Set pin 7 to be used as an output GPIO pin.</span>
</span><span class='line'><span class="k">print</span> <span class="s">&#39;Setting up pin </span><span class="si">%d</span><span class="s">&#39;</span> <span class="o">%</span> <span class="n">pin</span>
</span><span class='line'><span class="n">gpio</span><span class="o">.</span><span class="n">pinMode</span><span class="p">(</span><span class="n">pin</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">OUTPUT</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">print</span> <span class="s">&#39;Blinking pin </span><span class="si">%d</span><span class="s"> now...&#39;</span> <span class="o">%</span> <span class="n">pin</span>
</span><span class='line'><span class="k">try</span><span class="p">:</span>
</span><span class='line'>    <span class="k">while</span><span class="p">(</span><span class="bp">True</span><span class="p">):</span>
</span><span class='line'>        <span class="c"># Write a state to the pin. ON or OFF.</span>
</span><span class='line'>        <span class="n">gpio</span><span class="o">.</span><span class="n">digitalWrite</span><span class="p">(</span><span class="n">pin</span><span class="p">,</span> <span class="n">state</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="c"># Toggle the state.</span>
</span><span class='line'>        <span class="n">state</span> <span class="o">=</span> <span class="n">gpio</span><span class="o">.</span><span class="n">LOW</span> <span class="k">if</span> <span class="n">state</span> <span class="o">==</span> <span class="n">gpio</span><span class="o">.</span><span class="n">HIGH</span> <span class="k">else</span> <span class="n">gpio</span><span class="o">.</span><span class="n">HIGH</span>
</span><span class='line'>
</span><span class='line'>        <span class="c"># Sleep for a while.</span>
</span><span class='line'>        <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mf">0.5</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># When you get tired of seeing the led blinking kill the loop with Ctrl-C.</span>
</span><span class='line'><span class="k">except</span> <span class="ne">KeyboardInterrupt</span><span class="p">:</span>
</span><span class='line'>    <span class="c"># Leave the led turned off.</span>
</span><span class='line'>    <span class="k">print</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">Cleaning up...&#39;</span>
</span><span class='line'>    <span class="n">gpio</span><span class="o">.</span><span class="n">digitalWrite</span><span class="p">(</span><span class="n">pin</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">LOW</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># Do a general cleanup. Calling this function is not mandatory.</span>
</span><span class='line'>    <span class="n">gpio</span><span class="o">.</span><span class="n">cleanup</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>simpan dengan nama file blink.py , mari kita execute filenya.</p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>python blink.py
</span></code></pre></td></tr></table></div></figure>


<p><video width='320' height='640' preload='metadata' controls poster='http://www.sofianhw.com/images/blinking-led-edison.jpg'><source src='http://www.sofianhw.com/images/blinking-led-edison.mp4' type='video/mp4; codecs="avc1.42E01E, mp4a.40.2"'></video></p>

<p>Hore!!! LED-nya kedap-kedip.</p>

<p>Setelah kita bisa mengkontrol GPIO dari Intel Edison sekarang saatnya kita menginstall <em>package</em> untuk MQTT Client. Salah satu <em>module</em> yang hits sekarang yaitu <a href="https://pypi.python.org/pypi/paho-mqtt">Paho-MQTT</a>.</p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>pip install paho-mqtt
</span></code></pre></td></tr></table></div></figure>


<p>Selanjutnya, berikut kode dasar menggunakan paho-mqtt untuk berkomunikasi dengan <a href="http://geeknesia.com">Geeknesia</a> :</p>

<figure class='code'><figcaption><span>mqttClient.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
</pre></td><td class='code'><pre><code class='Python'><span class='line'><span class="kn">from</span> <span class="nn">wiringx86</span> <span class="kn">import</span> <span class="n">GPIOEdison</span> <span class="k">as</span> <span class="n">GPIO</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">paho.mqtt.client</span> <span class="kn">as</span> <span class="nn">paho</span><span class="o">,</span> <span class="nn">os</span><span class="o">,</span> <span class="nn">urlparse</span><span class="o">,</span> <span class="nn">time</span>
</span><span class='line'>
</span><span class='line'><span class="n">gpio</span> <span class="o">=</span> <span class="n">GPIO</span><span class="p">(</span><span class="n">debug</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</span><span class='line'><span class="n">analogpin</span> <span class="o">=</span> <span class="mi">17</span>
</span><span class='line'><span class="n">gpio</span><span class="o">.</span><span class="n">pinMode</span><span class="p">(</span><span class="n">analogpin</span><span class="p">,</span> <span class="n">gpio</span><span class="o">.</span><span class="n">ANALOG_INPUT</span><span class="p">)</span>
</span><span class='line'><span class="c"># Define event callbacks</span>
</span><span class='line'><span class="k">def</span> <span class="nf">on_connect</span><span class="p">(</span><span class="n">mosq</span><span class="p">,</span> <span class="n">obj</span><span class="p">,</span> <span class="n">rc</span><span class="p">):</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="s">&quot;rc: &quot;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">rc</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">on_message</span><span class="p">(</span><span class="n">mosq</span><span class="p">,</span> <span class="n">obj</span><span class="p">,</span> <span class="n">msg</span><span class="p">):</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">msg</span><span class="o">.</span><span class="n">topic</span> <span class="o">+</span> <span class="s">&quot; &quot;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">msg</span><span class="o">.</span><span class="n">qos</span><span class="p">)</span> <span class="o">+</span> <span class="s">&quot; &quot;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">msg</span><span class="o">.</span><span class="n">payload</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">on_publish</span><span class="p">(</span><span class="n">mosq</span><span class="p">,</span> <span class="n">obj</span><span class="p">,</span> <span class="n">mid</span><span class="p">):</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="s">&quot;mid: &quot;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">mid</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">on_subscribe</span><span class="p">(</span><span class="n">mosq</span><span class="p">,</span> <span class="n">obj</span><span class="p">,</span> <span class="n">mid</span><span class="p">,</span> <span class="n">granted_qos</span><span class="p">):</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="s">&quot;Subscribed: &quot;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">mid</span><span class="p">)</span> <span class="o">+</span> <span class="s">&quot; &quot;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">granted_qos</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">on_log</span><span class="p">(</span><span class="n">mosq</span><span class="p">,</span> <span class="n">obj</span><span class="p">,</span> <span class="n">level</span><span class="p">,</span> <span class="n">string</span><span class="p">):</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">string</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">mqttc</span> <span class="o">=</span> <span class="n">paho</span><span class="o">.</span><span class="n">Client</span><span class="p">()</span>
</span><span class='line'><span class="c"># Assign event callbacks</span>
</span><span class='line'><span class="n">mqttc</span><span class="o">.</span><span class="n">on_message</span> <span class="o">=</span> <span class="n">on_message</span>
</span><span class='line'><span class="n">mqttc</span><span class="o">.</span><span class="n">on_connect</span> <span class="o">=</span> <span class="n">on_connect</span>
</span><span class='line'><span class="n">mqttc</span><span class="o">.</span><span class="n">on_publish</span> <span class="o">=</span> <span class="n">on_publish</span>
</span><span class='line'><span class="n">mqttc</span><span class="o">.</span><span class="n">on_subscribe</span> <span class="o">=</span> <span class="n">on_subscribe</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Uncomment to enable debug messages</span>
</span><span class='line'><span class="c">#mqttc.on_log = on_log</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Parse CLOUDMQTT_URL (or fallback to localhost)</span>
</span><span class='line'><span class="n">url_str</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">environ</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;CLOUDMQTT_URL&#39;</span><span class="p">,</span> <span class="s">&#39;mqtt://USERNAME:PASSWORD@geeknesia.com:1883&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">url</span> <span class="o">=</span> <span class="n">urlparse</span><span class="o">.</span><span class="n">urlparse</span><span class="p">(</span><span class="n">url_str</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Connect</span>
</span><span class='line'><span class="n">mqttc</span><span class="o">.</span><span class="n">username_pw_set</span><span class="p">(</span><span class="n">url</span><span class="o">.</span><span class="n">username</span><span class="p">,</span> <span class="n">url</span><span class="o">.</span><span class="n">password</span><span class="p">)</span>
</span><span class='line'><span class="n">mqttc</span><span class="o">.</span><span class="n">connect</span><span class="p">(</span><span class="n">url</span><span class="o">.</span><span class="n">hostname</span><span class="p">,</span> <span class="n">url</span><span class="o">.</span><span class="n">port</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Start subscribe, with QoS level 0</span>
</span><span class='line'><span class="n">mqttc</span><span class="o">.</span><span class="n">subscribe</span><span class="p">(</span><span class="s">&quot;hello/world&quot;</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Publish a message</span>
</span><span class='line'><span class="n">mqttc</span><span class="o">.</span><span class="n">publish</span><span class="p">(</span><span class="s">&quot;iot/live&quot;</span><span class="p">,</span> <span class="s">&quot;DEVICE_ID&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Continue the network loop, exit when an error occurs</span>
</span><span class='line'><span class="n">rc</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="k">while</span> <span class="n">rc</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
</span><span class='line'>    <span class="n">rc</span> <span class="o">=</span> <span class="n">mqttc</span><span class="o">.</span><span class="n">loop</span><span class="p">()</span>
</span><span class='line'>    <span class="n">value</span> <span class="o">=</span> <span class="n">gpio</span><span class="o">.</span><span class="n">analogRead</span><span class="p">(</span><span class="n">analogpin</span><span class="p">)</span>
</span><span class='line'>    <span class="n">mqttc</span><span class="o">.</span><span class="n">publish</span><span class="p">(</span><span class="s">&quot;iot/data&quot;</span><span class="p">,</span> <span class="s">&#39;{&quot;code&quot;:&quot;USERNAME:PASSWORD&quot;,&quot;attributes&quot;:{&quot;LDR&quot;:&quot;&#39;</span><span class="o">+</span> <span class="sb">`value`</span> <span class="o">+</span><span class="s">&#39;&quot;}}&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mi">60</span><span class="p">)</span>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="s">&quot;rc: &quot;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">rc</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>Analog Input pada <em>module</em> Wiring-x86 mulai dari pin 17-19. Jadi A0 = 17 , dan seterusnya. Untuk saat ini saya menggunakan A03 sebagai Analog Input. Dengan demikian saya menggunakan pin 17.</p>

<p>Jangan lupa ganti DEVICE_ID, USERNAME, dan PASSWORD , sesuai dengan informasi detail dari device yang Anda daftarkan pada <a href="http://geeknesia.com">Geeknesia</a>.
Mari kita execute script Python kita</p>

<figure class='code'><figcaption><span>Terminal</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>python mqttClient.py
</span></code></pre></td></tr></table></div></figure>


<p><img class="center" src="http://www.sofianhw.com/images/blinking-led-edison.jpg" width="320" height="320" title="'blinking led edison'" >
<img class="center" src="http://www.sofianhw.com/images/data-device.jpg" title="'data-device'" ></p>

<p>Intel Edison akan selalu mengirimkan data dari sensor LDR ke <a href="http://geeknesia.com">Geeknesia</a> dengan interval 60 detik.
Semua source saya upload ke Github dengan nama repo <a href="https://github.com/sofianhw/python-mqtt-geeknesia">python-mqtt-geeknesia</a>.</p>

<p>Silakan berkreasi dengan dasar yang sudah ada.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pengenalan Bahasa Pemrogramman Python]]></title>
    <link href="http://www.sofianhw.com/blog/2015/06/29/pengenalan-bahasa-pemrogramman-python/"/>
    <updated>2015-06-29T00:04:38+07:00</updated>
    <id>http://www.sofianhw.com/blog/2015/06/29/pengenalan-bahasa-pemrogramman-python</id>
    <content type="html"><![CDATA[<p>Seiring dengan pesatnya perkembangan <em>mini computer</em> <em>raspberry pi</em>, makin banyak <em>programmer</em> yang kembali melirik bahasa pemrogramman yang sudah cukup tua, yaitu <em>python</em>. Python merupakan bahasa pemrogramman yang mengedepankan <em>readability</em> dan <em>productivity</em>. Mungkin hal tersebut yang membuat para pengembang <em>raspberry pi</em> memilih Python sebagai bahasa pemrogramman yang mereka gunakan dalam pembuatan perangkat lunak yang bisa mengontrol <em>board</em> mereka.</p>

<!-- more -->


<p>Python mulai diciptakan oleh <a href="https://en.wikipedia.org/wiki/Guido_van_Rossum">Guido van Rossum</a> pada tahun 80an. Sejarah lengkapnya dapat dibaca pada <a href="https://en.wikipedia.org/wiki/Python_(programming_language">wikipedia python</a>).</p>

<h2>Perusahaan Apa Saja yang Menggunakan Python</h2>

<ul>
<li><a href="https://google.co.id">Google</a></li>
<li><a href="http://www.nasa.gov">NASA</a></li>
<li><a href="https://www.youtube.com">Youtube</a></li>
<li><a href="https://www.reddit.com">Reddit</a></li>
<li><a href="https://www.instagram.com">Instagram</a></li>
<li><a href="https://www.spotify.com">Spotify</a></li>
<li><a href="https://wiki.python.org/moin/OrganizationsUsingPython">Etc.</a></li>
</ul>


<h2>Install Python</h2>

<p>Untuk menginstall python dapat mengikuti <a href="https://wiki.python.org/moin/BeginnersGuide/Download">link berikut</a>. Kebetulan OS yang saya pake adalah OSX maka python biasanya sudah termasuk dalam system unix dan linux. Jika sudah menginstall python, pada terminal/command prompt anda cukup mengetik &ldquo;python&rdquo; enter. Maka Anda akan dibawa ke python interpreter.</p>

<p><img class="center" src="http://www.sofianhw.com/images/python-interpreter.jpg" title="'python interpreter'" ></p>

<h2>Pengenalan</h2>

<iframe src="http://www.slideshare.net/slideshow/embed_code/49933401 " width="595" height="446" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen></iframe>


<p></p>

<h2>Penggunaan</h2>

<p>Setelah mengerti dasar-dasar dari python untuk mengkontrol GPIO pada <em>board</em> Anda dapat menggunakan package berikut :</p>

<ul>
<li>Raspberry Pi <a href="https://pypi.python.org/pypi/RPi.GPIO">RPi.GPIO</a></li>
<li>Intel Galileo <a href="https://pypi.python.org/pypi/Wiring-x86/0.1">Wiring-x86</a></li>
</ul>


<p>Silakan mencoba pada board kesayangan Anda.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Membuat Web Atau Blog Statis Gratis Pada Github Dengan Octopress]]></title>
    <link href="http://www.sofianhw.com/blog/2015/06/19/membuat-web-atau-blog-statis-gratis-pada-github-dengan-octopress/"/>
    <updated>2015-06-19T21:59:34+07:00</updated>
    <id>http://www.sofianhw.com/blog/2015/06/19/membuat-web-atau-blog-statis-gratis-pada-github-dengan-octopress</id>
    <content type="html"><![CDATA[<p>Hari ini kita bakal bahas bagaimana cara membuat blog ini. Blog ini merupakan blog statis, dimana tidak ada CMS (Content Management System) dan blog ini hanya terdiri dari HTML, CSS, JavaScript. Dan tentunya free, dengan manfaatkan <em>fitur</em> <a href="http://github.com">Github</a> pages dan <em>framework</em> blog statis seperti <a href="http://octopress.org">Octopress</a>.</p>

<!-- more -->


<p>Sebelum mulai pertama kita harus install <a href="http://octopress.org">Octopress</a> terlebih dahulu di-pc kita. untuk menginstall <a href="http://octopress.org">Octopress</a> kita membutuhkan beberapa tools berikut :</p>

<ul>
<li>Install Git.</li>
<li>Install Ruby >= 1.9.3 menggunakan rbenv atau RVM.</li>
<li>Install salah satu dari ExecJS yang <em>support</em> Javascript runtimes.</li>
</ul>


<h2>Setup Octopress</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>1. git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'>2. cd octopress
</span><span class='line'>3. gem install bundler
</span><span class='line'>4. rbenv rehash    # If you use rbenv, rehash to be able to run the bundle command
</span><span class='line'>5. bundle install
</span><span class='line'>6. rake install    # install octopress
</span><span class='line'>7. rake preview    # generate preview </span></code></pre></td></tr></table></div></figure>


<p>Setelah itu Anda bisa menjalankan perintah &ldquo;rake preview&rdquo; untuk membuat blog jalan di localhost dengan default port 4000. Anda dapat mengakses blog anda secara offline dengan membuka <a href="http://localhost:4000.">http://localhost:4000.</a></p>

<h2>Deploy ke Github</h2>

<p>Pertama-tama buat <em>repository</em> baru pada <a href="http://github.com">Github</a> dengan format username.github.io ( ganti username dengan username kalian ). Berikut contohnya username saya ada <em>sofianhw</em>, maka _repository_nya adalah sofianhw.github.com.</p>

<p><img class="center" src="http://www.sofianhw.com/images/buat-repository-github-page.jpg" title="'buat-repository-github-page'" ></p>

<p>Setelah Anda menekan tombol <em>Create Repository</em>, <em>Github Page</em> Anda dapat diakses melalui <a href="http://username.github.io">http://username.github.io</a> , sebagai contoh untuk mengakses <a href="http://github.com">Github</a> saya bisa melalui <a href="http://sofianhw.github.io.">http://sofianhw.github.io.</a></p>

<p>Untuk saat ini page Anda masih blank, karena belom ada file yang kita upload ke <a href="http://github.com">Github</a>. Mari kita pointing <a href="http://octopress.org">Octopress</a> kita ke <em>repository</em> yang baru saja kita buat. ketikan perintah berikut pada terminal Anda.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake setup_github_pages</span></code></pre></td></tr></table></div></figure>


<p>Anda akan ditanya url dari <em>repository</em> <a href="http://github.com">Github</a></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Enter the read/write url for your repository
</span><span class='line'>(For example, 'git@github.com:your_username/your_username.github.io.git)
</span><span class='line'>           or 'https://github.com/your_username/your_username.github.io')
</span><span class='line'>Repository url: git@github.com:username/username.github.io.git</span></code></pre></td></tr></table></div></figure>


<p>Ganti username dengan username Anda. Setelah semuanya terkonfigurasi, Anda cukup mengetik perintah</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate
</span><span class='line'>rake deploy</span></code></pre></td></tr></table></div></figure>


<p><a href="http://octopress.org">Octopress</a> akan <em>mengenerate</em> blog statis Anda dan mengupload blog statis Anda ke repository <a href="http://github.com">Github</a>. Dan andapun dapat mengakses web / blog statis Anda melalui url <a href="http://username.github.io.">http://username.github.io.</a></p>

<h2>Reference</h2>

<ul>
<li><a href="http://octopress.org/docs/setup/">http://octopress.org/docs/setup/</a></li>
<li><a href="http://octopress.org/docs/deploying/github/">http://octopress.org/docs/deploying/github/</a></li>
<li><a href="http://octopress.org/docs/configuring/">http://octopress.org/docs/configuring/</a></li>
<li><a href="http://octopress.org/docs/blogging/">http://octopress.org/docs/blogging/</a></li>
<li><a href="https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes">https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IoT Pada Intel Galileo Menggunakan Platform Dari Geeknesia.com]]></title>
    <link href="http://www.sofianhw.com/blog/2015/06/13/iot-pada-intel-galileo-menggunakan-platform-dari-geeknesia-dot-com/"/>
    <updated>2015-06-13T21:48:40+07:00</updated>
    <id>http://www.sofianhw.com/blog/2015/06/13/iot-pada-intel-galileo-menggunakan-platform-dari-geeknesia-dot-com</id>
    <content type="html"><![CDATA[<p>Hari ini sangat luar biasa, karena saya dapat berbagi ilmu pengetahuan tentang &ldquo;Internet of Things&rdquo; dengan menggunakan <em>board</em> dari <a href="http://www.intel.com">intel</a> berupa <em>Intel Galileo</em> dan <em>Intel Edison</em> pada acara <a href="http://www.meetup.com/Bandung-Internet-of-Things-Meetup/events/223152407">Bandung Internet of Things Meetup yang ke 12</a>
Persentasi saya dimulai dari menceritakan apa itu <em>Intel Galileo</em> dan <em>Intel Edison</em>. Pada tulisan saat ini saya tidak akan banyak menulis tentang <em>board</em> tersebut, saya akan bercerita pengalaman sayang menggunakan <em>platform IoT</em> asli <em>made in</em> Bandung yaitu <a href="http://www.geeknesia.com">Geeknesia</a>.</p>

<!-- more -->


<h4>1. Registrasi</h4>

<p>Pertama kita harus registrasi dulu pada websitenya <a href="http://www.geeknesia.com">Geeknesia</a>, Tunggu beberapa saat nanti Anda akan mendapatkan email dari <a href="http://www.geeknesia.com">Geeknesia</a> berupa username dan password untuk masuk ke <em>platform IoT</em> tersebut.</p>

<h4>2. Add New Device</h4>

<p>Setelah mendapatkan akses, kita bisa menambahkan device yang kita punya dengan cara, mengklik button pada pojok kanan atas &ldquo;Add New Device&rdquo;, disini kita akan diminta untuk memberikan informasi <em>device</em> kita.</p>

<p><img class="center" src="http://www.sofianhw.com/images/add-new-device.jpg" title="'add new device'" ></p>

<p>jika semua data sudah diisi dengan benar, kita tekan tombol <em>create</em>. Setelah itu kita akan dibawa ke halaman yang memberikan informasi detail tentang device kita dan beberapa contoh API dari <a href="http://www.geeknesia.com">Geeknesia</a> yang dapat kita gunakan nantinya.</p>

<p><img class="center" src="http://www.sofianhw.com/images/detail-device.jpg" title="'detail device'" ></p>

<h4>3. Menghubungkan Intel Galileo ke Geeknesia</h4>

<p>Ada beberapa cara untuk menghubungkan Intel Galileo dan <a href="http://www.geeknesia.com">Geeknesia</a>. Namun pada artikel ini saya hanya akan membahas dengan menggunakan bahasa pemrogramman <em><a href="https://nodejs.org">nodejs</a></em> dan <em>protocol <a href="http://mqtt.org">mqtt</a></em>.
Saya menggunakan Grove Starter Kit, untuk memudahkan dalam menggunakan LED dan sensor LDR.</p>

<p><img class="center" src="http://www.sofianhw.com/images/intel-galileo-geeknesia.jpg" title="'intel galileo geeknesia'" ></p>

<p>Persiapkan Intel Galileo kalian, pertama-tama remote login Intel Galileo, bisa melalui ssh ataupun telnet ataupun screen. Untuk saat ini saya menggunakan ssh.
Kemudian tulis kode berikut dan simpan</p>

<figure class='code'><figcaption><span>package.json</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='JavaScript'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s2">&quot;name&quot;</span><span class="o">:</span> <span class="s2">&quot;galileo-geeknesia&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;version&quot;</span><span class="o">:</span> <span class="s2">&quot;1.0.0&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;description&quot;</span><span class="o">:</span> <span class="s2">&quot;menghubungkan galileo ke geeknesia&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;main&quot;</span><span class="o">:</span> <span class="s2">&quot;galileo-geeknesia.js&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;dependencies&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;galileo-io&quot;</span><span class="o">:</span> <span class="s2">&quot;^0.8.14&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;mqtt&quot;</span><span class="o">:</span> <span class="s2">&quot;^1.1.4&quot;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="s2">&quot;devDependencies&quot;</span><span class="o">:</span> <span class="p">{},</span>
</span><span class='line'>  <span class="s2">&quot;scripts&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;test&quot;</span><span class="o">:</span> <span class="s2">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="s2">&quot;author&quot;</span><span class="o">:</span> <span class="s2">&quot;sofian hadiwijaya&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="s2">&quot;license&quot;</span><span class="o">:</span> <span class="s2">&quot;ISC&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>galileo-geeknesia.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='JavaScript'><span class='line'><span class="kd">var</span> <span class="nx">mqtt</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;mqtt&#39;</span><span class="p">),</span> <span class="nx">url</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;url&#39;</span><span class="p">),</span> <span class="nx">Galileo</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s2">&quot;galileo-io&quot;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">mqtt_url</span> <span class="o">=</span> <span class="nx">url</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="s1">&#39;mqtt://USERNAME:PASSWORD@geeknesia.com:1883&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">auth</span> <span class="o">=</span> <span class="p">(</span><span class="nx">mqtt_url</span><span class="p">.</span><span class="nx">auth</span> <span class="o">||</span> <span class="s1">&#39;:&#39;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39;:&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">board</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Galileo</span><span class="p">();</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">LDR</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">client</span> <span class="o">=</span> <span class="nx">mqtt</span><span class="p">.</span><span class="nx">createClient</span><span class="p">(</span><span class="nx">mqtt_url</span><span class="p">.</span><span class="nx">port</span><span class="p">,</span> <span class="nx">mqtt_url</span><span class="p">.</span><span class="nx">hostname</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">username</span><span class="o">:</span> <span class="nx">auth</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span>
</span><span class='line'>  <span class="nx">password</span><span class="o">:</span> <span class="nx">auth</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nx">client</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;connect&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span> <span class="c1">// When connected</span>
</span><span class='line'>  <span class="nx">client</span><span class="p">.</span><span class="nx">publish</span><span class="p">(</span><span class="s1">&#39;iot/live&#39;</span><span class="p">,</span> <span class="s1">&#39;DEVICE_ID&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Menghubungkan ke Geeknesia&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>  <span class="nx">board</span><span class="p">.</span><span class="nx">pinMode</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="nx">board</span><span class="p">.</span><span class="nx">MODES</span><span class="p">.</span><span class="nx">OUTPUT</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">board</span><span class="p">.</span><span class="nx">analogRead</span><span class="p">(</span><span class="s2">&quot;A3&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">){</span>
</span><span class='line'>    <span class="nx">LDR</span> <span class="o">=</span> <span class="nx">data</span><span class="p">;</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>  <span class="nx">setInterval</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="nx">LDR</span> <span class="o">&gt;=</span><span class="mi">300</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">board</span><span class="p">.</span><span class="nx">digitalWrite</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="nx">board</span><span class="p">.</span><span class="nx">digitalWrite</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">client</span><span class="p">.</span><span class="nx">publish</span><span class="p">(</span><span class="s1">&#39;iot/data&#39;</span><span class="p">,</span> <span class="s1">&#39;{&quot;code&quot;:&quot;USERNAME:PASSWORD&quot;,&quot;attributes&quot;:{&quot;LDR&quot;:&quot;&#39;</span><span class="o">+</span><span class="nx">LDR</span><span class="o">+</span><span class="s1">&#39;&quot;}}&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Send data LDR = &quot;</span><span class="o">+</span><span class="nx">LDR</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>  <span class="p">},</span> <span class="mi">1000</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ganti USERNAME, PASSWORD, dan DEVICE_ID sesuai dengan informasi detail dari device kalian. Source codenya saya upload ke <a href="http://www.github.com">github</a>, yang mau <em>clone</em> ataupun <em>fork</em> bisa ke link <a href="https://github.com/sofianhw/intel-galileo-geeknesia">intel-galileo-geeknesia</a>.
Untuk menjalan kode tersebut sebelumnya kita ketik perintah</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='Bash'><span class='line'><span class="nv">$ </span>npm install
</span></code></pre></td></tr></table></div></figure>


<p>perintah tersebut akan menginstal <em>dependencies</em> dari kode kita. Setelah itu untuk menjalankan <em>script</em> tersebut kita ketik perintah</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='Bash'><span class='line'><span class="nv">$ </span>node galileo-geeknesia.js
</span></code></pre></td></tr></table></div></figure>


<p>untuk melihat apakah kode tersebut berjalan dengan sempurna, kita kembali ke <em>dashboard</em> <a href="http://www.geeknesia.com">Geeknesia</a>. Kita pastikan device kita terhubung dan mengirimkan data, bisa dilihat pada gambar berikut</p>

<p><img class="center" src="http://www.sofianhw.com/images/data-device.jpg" title="'data device'" ></p>

<p>Pengembangan selanjut, kita bisa bikin dashboard yang mendapatkan data dari API <a href="http://www.geeknesia.com">Geeknesia</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blinky LED Using Intel Galileo Board]]></title>
    <link href="http://www.sofianhw.com/blog/2015/06/11/blinky-led-using-intel-galileo-board/"/>
    <updated>2015-06-11T23:55:39+07:00</updated>
    <id>http://www.sofianhw.com/blog/2015/06/11/blinky-led-using-intel-galileo-board</id>
    <content type="html"><![CDATA[<p>After the <a href="http://www.bigdataindonesia.com/hackathon.php">IoT Hackathon</a> event held at <a href="www.crazyhackerz.com">Crazy Hackerz Makerspace</a> (7-8 March 2015), Intel decided to lend us the Intel Galileo for us to experiment and play around with it. In genereal Intel Galileo is embedded board which is a combination of the Arduino Uno with an Intel X1000 SoC Quark.  In short, Intel Galileo is a mini computer with the concept of DIY (Do it Yourself) which is similar to the Raspberry Pi.</p>

<!-- more -->


<p>Interestingly Intel Galileo is compatible with Arduino and Arduini, an electric kit or open source electronic circuit board which includes the main components of a chip microcontroller with the type of AVR. So through Intel Galileo we can control the Arduino directly from Linux.</p>

<p>I would like to take this opportunity to invite you to understand the theory of Internet Of Things (IOT) based on Intel’s simple Galileo (for you who want to study in more depth about the IOT, you can study for free in <a href="https://software.intel.com/en-us/courseware/IOT">intel iot course</a>.</p>

<p>Since I am a Web Developer, I like it when Intel discusses about <a href="http://nodejs.org">Nodejs</a> (section 7), especially on the way to control the input/output Arduino. The tools that we will be making this time is <em>Blinky Led</em> with the use of Nodejs program. But how do we do this? Come join me while I show you the process.</p>

<h2>Hardware Required</h2>

<p>First of all to start this project we will need:</p>

<ul>
<li>Intel Galileo</li>
<li>LED</li>
<li>Laptop/Computer (OS: Linux/Mac)</li>
</ul>


<h2>Connecting the Hardware</h2>

<p>Make sure the device is Intel Galileo and connected to a working laptop/computer and connected to a network. To know the IP address of the Intel Galileo, we can use the command</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ arp-a</span></code></pre></td></tr></table></div></figure>


<p><img class="center" src="http://www.sofianhw.com/images/intel-galileo-arp-a.png" title="'intel-galileo arp-a'" ></p>

<h2>Find the Intel Galileo IP address</h2>

<p>Since I use a LAN, I am able to see the mac address attached to the LAN port on the Intel Galileo. After retrieving the IP of the Intel Galileo, we remote login into Intel Galileo with the command</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ssh root@[ip_intel_galileo]</span></code></pre></td></tr></table></div></figure>


<p><img class="center" src="http://www.sofianhw.com/images/intel-galileo-ssh.png" title="'intel-galileo ssh'" ></p>

<h2>Create a Folder</h2>

<p>Upon entry into the Intel Galileo Linux, we will create a folder for our project. For example the folder name is First IOT then we make the command</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ mkdir first-iot && cd first-iot</span></code></pre></td></tr></table></div></figure>


<p><img class="center" src="http://www.sofianhw.com/images/intel-galileo-mkdir.png" title="'intel-galileo mkdir'" ></p>

<h2>Install the package</h2>

<p>Furthermore, we can use a package that has been provided for communicating with the Arduino contained in Intel Galileo. One package that is available is <a href="https://github.com/rwaldron/galileo-io">galileo-io</a> we can install the package with the command</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ npm install galileo-io</span></code></pre></td></tr></table></div></figure>


<p><img class="center" src="http://www.sofianhw.com/images/intel-galileo-npm-install.png" title="'intel-galileo npm install'" ></p>

<h2>Enter the code</h2>

<p>We will create a <strong>hello world</strong> on the board, which is made of blinking LED, with the following code:</p>

<figure class='code'><figcaption><span>server.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='JavaScript'><span class='line'><span class="kd">var</span> <span class="nx">Galileo</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s2">&quot;galileo-io&quot;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">board</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Galileo</span><span class="p">();</span>
</span><span class='line'><span class="nx">board</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;ready&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="kr">byte</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">pinMode</span><span class="p">(</span><span class="mi">13</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">MODES</span><span class="p">.</span><span class="nx">OUTPUT</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">setInterval</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>      <span class="nx">board</span><span class="p">.</span><span class="nx">digitalWrite</span><span class="p">(</span><span class="mi">13</span><span class="p">,(</span><span class="kr">byte</span> <span class="o">^=</span><span class="mi">1</span><span class="p">))</span>
</span><span class='line'>  <span class="p">},</span> <span class="mi">500</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>Write down the code in the file server.js example, to execute the code we use <strong>node server.js</strong> on the terminal. If you do not have the nodejs on the operating system, you can see the tutorial on the following <a href="https://nodejs.org/download">link</a></p>

<p><img class="center" src="http://www.sofianhw.com/images/intel-galileo-node-start.png" title="'intel-galileo node start'" ></p>

<p>Wooollllaaaaa!!! LED on pin 13 Arduino blinking</p>

<p><img class="center" src="http://www.sofianhw.com/images/intel-galileo-blinky.png" title="'intel-galileo blinky'" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello World]]></title>
    <link href="http://www.sofianhw.com/blog/2015/06/11/hello-world/"/>
    <updated>2015-06-11T19:15:13+07:00</updated>
    <id>http://www.sofianhw.com/blog/2015/06/11/hello-world</id>
    <content type="html"><![CDATA[<h2>You are reading my blog now!</h2>

<!-- more -->


<p><strong>My blog is all about :</strong></p>

<ul>
<li>Tech Updates</li>
<li>Tips &amp; Trick</li>
<li>My Lab</li>
</ul>


<p>Thanks for visiting my blog.</p>
]]></content>
  </entry>
  
</feed>
